// <auto-generated>
using System;
using System.Threading.Tasks;
using System.Collections.Generic;
using System.Numerics;
using Nethereum.Hex.HexTypes;
using Nethereum.ABI.FunctionEncoding.Attributes;

namespace RocketExplorer.Ethereum.RocketMegapoolDelegate.ContractDefinition
{
    public partial class ValidatorInfo : ValidatorInfoBase { }

    public class ValidatorInfoBase 
    {
        [Parameter("bytes", "pubKey", 1)]
        public virtual byte[] PubKey { get; set; }
        [Parameter("uint32", "lastAssignmentTime", 2)]
        public virtual uint LastAssignmentTime { get; set; }
        [Parameter("uint32", "lastRequestedValue", 3)]
        public virtual uint LastRequestedValue { get; set; }
        [Parameter("uint32", "lastRequestedBond", 4)]
        public virtual uint LastRequestedBond { get; set; }
        [Parameter("uint32", "depositValue", 5)]
        public virtual uint DepositValue { get; set; }
        [Parameter("bool", "staked", 6)]
        public virtual bool Staked { get; set; }
        [Parameter("bool", "exited", 7)]
        public virtual bool Exited { get; set; }
        [Parameter("bool", "inQueue", 8)]
        public virtual bool InQueue { get; set; }
        [Parameter("bool", "inPrestake", 9)]
        public virtual bool InPrestake { get; set; }
        [Parameter("bool", "expressUsed", 10)]
        public virtual bool ExpressUsed { get; set; }
        [Parameter("bool", "dissolved", 11)]
        public virtual bool Dissolved { get; set; }
        [Parameter("bool", "exiting", 12)]
        public virtual bool Exiting { get; set; }
        [Parameter("uint64", "validatorIndex", 13)]
        public virtual ulong ValidatorIndex { get; set; }
        [Parameter("uint64", "exitBalance", 14)]
        public virtual ulong ExitBalance { get; set; }
        [Parameter("uint64", "withdrawableEpoch", 15)]
        public virtual ulong WithdrawableEpoch { get; set; }
    }
}
