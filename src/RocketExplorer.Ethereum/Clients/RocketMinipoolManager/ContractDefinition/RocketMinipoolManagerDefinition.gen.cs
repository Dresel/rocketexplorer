// <auto-generated>
using System;
using System.Threading.Tasks;
using System.Collections.Generic;
using System.Numerics;
using Nethereum.Hex.HexTypes;
using Nethereum.ABI.FunctionEncoding.Attributes;
using Nethereum.RPC.Eth.DTOs;
using Nethereum.Contracts.CQS;
using Nethereum.Contracts;
using System.Threading;

namespace RocketExplorer.Ethereum.RocketMinipoolManager.ContractDefinition
{


    public partial class RocketMinipoolManagerDeployment : RocketMinipoolManagerDeploymentBase
    {
        public RocketMinipoolManagerDeployment() : base(BYTECODE) { }
        public RocketMinipoolManagerDeployment(string byteCode) : base(byteCode) { }
    }

    public class RocketMinipoolManagerDeploymentBase : ContractDeploymentMessage
    {
        public static string BYTECODE = """
[
	{
		"inputs": [
			{
				"internalType": "contract RocketStorageInterface",
				"name": "_rocketStorageAddress",
				"type": "address"
			}
		],
		"stateMutability": "nonpayable",
		"type": "constructor"
	},
	{
		"anonymous": false,
		"inputs": [
			{
				"indexed": true,
				"internalType": "address",
				"name": "minipool",
				"type": "address"
			},
			{
				"indexed": false,
				"internalType": "uint256",
				"name": "time",
				"type": "uint256"
			}
		],
		"name": "BeginBondReduction",
		"type": "event"
	},
	{
		"anonymous": false,
		"inputs": [
			{
				"indexed": true,
				"internalType": "address",
				"name": "minipool",
				"type": "address"
			},
			{
				"indexed": true,
				"internalType": "address",
				"name": "member",
				"type": "address"
			},
			{
				"indexed": false,
				"internalType": "uint256",
				"name": "time",
				"type": "uint256"
			}
		],
		"name": "CancelReductionVoted",
		"type": "event"
	},
	{
		"anonymous": false,
		"inputs": [
			{
				"indexed": true,
				"internalType": "address",
				"name": "minipool",
				"type": "address"
			},
			{
				"indexed": true,
				"internalType": "address",
				"name": "node",
				"type": "address"
			},
			{
				"indexed": false,
				"internalType": "uint256",
				"name": "time",
				"type": "uint256"
			}
		],
		"name": "MinipoolCreated",
		"type": "event"
	},
	{
		"anonymous": false,
		"inputs": [
			{
				"indexed": true,
				"internalType": "address",
				"name": "minipool",
				"type": "address"
			},
			{
				"indexed": true,
				"internalType": "address",
				"name": "node",
				"type": "address"
			},
			{
				"indexed": false,
				"internalType": "uint256",
				"name": "time",
				"type": "uint256"
			}
		],
		"name": "MinipoolDestroyed",
		"type": "event"
	},
	{
		"anonymous": false,
		"inputs": [
			{
				"indexed": true,
				"internalType": "address",
				"name": "minipool",
				"type": "address"
			},
			{
				"indexed": false,
				"internalType": "uint256",
				"name": "time",
				"type": "uint256"
			}
		],
		"name": "ReductionCancelled",
		"type": "event"
	},
	{
		"inputs": [
			{
				"internalType": "address",
				"name": "_nodeAddress",
				"type": "address"
			},
			{
				"internalType": "uint256",
				"name": "_salt",
				"type": "uint256"
			}
		],
		"name": "createMinipool",
		"outputs": [
			{
				"internalType": "contract RocketMinipoolInterface",
				"name": "",
				"type": "address"
			}
		],
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "address",
				"name": "_nodeAddress",
				"type": "address"
			},
			{
				"internalType": "uint256",
				"name": "_salt",
				"type": "uint256"
			},
			{
				"internalType": "bytes",
				"name": "_validatorPubkey",
				"type": "bytes"
			},
			{
				"internalType": "uint256",
				"name": "_bondAmount",
				"type": "uint256"
			},
			{
				"internalType": "uint256",
				"name": "_currentBalance",
				"type": "uint256"
			}
		],
		"name": "createVacantMinipool",
		"outputs": [
			{
				"internalType": "contract RocketMinipoolInterface",
				"name": "",
				"type": "address"
			}
		],
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "address",
				"name": "_nodeAddress",
				"type": "address"
			}
		],
		"name": "decrementNodeStakingMinipoolCount",
		"outputs": [],
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"inputs": [],
		"name": "destroyMinipool",
		"outputs": [],
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"inputs": [],
		"name": "getActiveMinipoolCount",
		"outputs": [
			{
				"internalType": "uint256",
				"name": "",
				"type": "uint256"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [],
		"name": "getFinalisedMinipoolCount",
		"outputs": [
			{
				"internalType": "uint256",
				"name": "",
				"type": "uint256"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "uint256",
				"name": "_index",
				"type": "uint256"
			}
		],
		"name": "getMinipoolAt",
		"outputs": [
			{
				"internalType": "address",
				"name": "",
				"type": "address"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "bytes",
				"name": "_pubkey",
				"type": "bytes"
			}
		],
		"name": "getMinipoolByPubkey",
		"outputs": [
			{
				"internalType": "address",
				"name": "",
				"type": "address"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [],
		"name": "getMinipoolCount",
		"outputs": [
			{
				"internalType": "uint256",
				"name": "",
				"type": "uint256"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "uint256",
				"name": "_offset",
				"type": "uint256"
			},
			{
				"internalType": "uint256",
				"name": "_limit",
				"type": "uint256"
			}
		],
		"name": "getMinipoolCountPerStatus",
		"outputs": [
			{
				"internalType": "uint256",
				"name": "initialisedCount",
				"type": "uint256"
			},
			{
				"internalType": "uint256",
				"name": "prelaunchCount",
				"type": "uint256"
			},
			{
				"internalType": "uint256",
				"name": "stakingCount",
				"type": "uint256"
			},
			{
				"internalType": "uint256",
				"name": "withdrawableCount",
				"type": "uint256"
			},
			{
				"internalType": "uint256",
				"name": "dissolvedCount",
				"type": "uint256"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "address",
				"name": "_minipoolAddress",
				"type": "address"
			}
		],
		"name": "getMinipoolDepositType",
		"outputs": [
			{
				"internalType": "enum MinipoolDeposit",
				"name": "",
				"type": "uint8"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "address",
				"name": "_minipoolAddress",
				"type": "address"
			}
		],
		"name": "getMinipoolDestroyed",
		"outputs": [
			{
				"internalType": "bool",
				"name": "",
				"type": "bool"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "address",
				"name": "_minipoolAddress",
				"type": "address"
			}
		],
		"name": "getMinipoolExists",
		"outputs": [
			{
				"internalType": "bool",
				"name": "",
				"type": "bool"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "address",
				"name": "_minipoolAddress",
				"type": "address"
			}
		],
		"name": "getMinipoolPubkey",
		"outputs": [
			{
				"internalType": "bytes",
				"name": "",
				"type": "bytes"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "address",
				"name": "_minipoolAddress",
				"type": "address"
			}
		],
		"name": "getMinipoolRPLSlashed",
		"outputs": [
			{
				"internalType": "bool",
				"name": "",
				"type": "bool"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "address",
				"name": "_minipoolAddress",
				"type": "address"
			}
		],
		"name": "getMinipoolWithdrawalCredentials",
		"outputs": [
			{
				"internalType": "bytes",
				"name": "",
				"type": "bytes"
			}
		],
		"stateMutability": "pure",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "address",
				"name": "_nodeAddress",
				"type": "address"
			}
		],
		"name": "getNodeActiveMinipoolCount",
		"outputs": [
			{
				"internalType": "uint256",
				"name": "",
				"type": "uint256"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "address",
				"name": "_nodeAddress",
				"type": "address"
			}
		],
		"name": "getNodeFinalisedMinipoolCount",
		"outputs": [
			{
				"internalType": "uint256",
				"name": "",
				"type": "uint256"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "address",
				"name": "_nodeAddress",
				"type": "address"
			},
			{
				"internalType": "uint256",
				"name": "_index",
				"type": "uint256"
			}
		],
		"name": "getNodeMinipoolAt",
		"outputs": [
			{
				"internalType": "address",
				"name": "",
				"type": "address"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "address",
				"name": "_nodeAddress",
				"type": "address"
			}
		],
		"name": "getNodeMinipoolCount",
		"outputs": [
			{
				"internalType": "uint256",
				"name": "",
				"type": "uint256"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "address",
				"name": "_nodeAddress",
				"type": "address"
			}
		],
		"name": "getNodeStakingMinipoolCount",
		"outputs": [
			{
				"internalType": "uint256",
				"name": "",
				"type": "uint256"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "address",
				"name": "_nodeAddress",
				"type": "address"
			},
			{
				"internalType": "uint256",
				"name": "_depositSize",
				"type": "uint256"
			}
		],
		"name": "getNodeStakingMinipoolCountBySize",
		"outputs": [
			{
				"internalType": "uint256",
				"name": "",
				"type": "uint256"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "address",
				"name": "_nodeAddress",
				"type": "address"
			},
			{
				"internalType": "uint256",
				"name": "_index",
				"type": "uint256"
			}
		],
		"name": "getNodeValidatingMinipoolAt",
		"outputs": [
			{
				"internalType": "address",
				"name": "",
				"type": "address"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "address",
				"name": "_nodeAddress",
				"type": "address"
			}
		],
		"name": "getNodeValidatingMinipoolCount",
		"outputs": [
			{
				"internalType": "uint256",
				"name": "",
				"type": "uint256"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "uint256",
				"name": "_offset",
				"type": "uint256"
			},
			{
				"internalType": "uint256",
				"name": "_limit",
				"type": "uint256"
			}
		],
		"name": "getPrelaunchMinipools",
		"outputs": [
			{
				"internalType": "address[]",
				"name": "",
				"type": "address[]"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [],
		"name": "getStakingMinipoolCount",
		"outputs": [
			{
				"internalType": "uint256",
				"name": "",
				"type": "uint256"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "uint256",
				"name": "_index",
				"type": "uint256"
			}
		],
		"name": "getVacantMinipoolAt",
		"outputs": [
			{
				"internalType": "address",
				"name": "",
				"type": "address"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [],
		"name": "getVacantMinipoolCount",
		"outputs": [
			{
				"internalType": "uint256",
				"name": "",
				"type": "uint256"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "address",
				"name": "_nodeAddress",
				"type": "address"
			}
		],
		"name": "incrementNodeFinalisedMinipoolCount",
		"outputs": [],
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "address",
				"name": "_nodeAddress",
				"type": "address"
			}
		],
		"name": "incrementNodeStakingMinipoolCount",
		"outputs": [],
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"inputs": [],
		"name": "removeVacantMinipool",
		"outputs": [],
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "bytes",
				"name": "_pubkey",
				"type": "bytes"
			}
		],
		"name": "setMinipoolPubkey",
		"outputs": [],
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "address",
				"name": "_nodeAddress",
				"type": "address"
			}
		],
		"name": "tryDistribute",
		"outputs": [],
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "uint256",
				"name": "_previousBond",
				"type": "uint256"
			},
			{
				"internalType": "uint256",
				"name": "_newBond",
				"type": "uint256"
			},
			{
				"internalType": "uint256",
				"name": "_previousFee",
				"type": "uint256"
			},
			{
				"internalType": "uint256",
				"name": "_newFee",
				"type": "uint256"
			}
		],
		"name": "updateNodeStakingMinipoolCount",
		"outputs": [],
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"inputs": [],
		"name": "version",
		"outputs": [
			{
				"internalType": "uint8",
				"name": "",
				"type": "uint8"
			}
		],
		"stateMutability": "view",
		"type": "function"
	}
]
""";
        public RocketMinipoolManagerDeploymentBase() : base(BYTECODE) { }
        public RocketMinipoolManagerDeploymentBase(string byteCode) : base(byteCode) { }
        [Parameter("address", "_rocketStorageAddress", 1)]
        public virtual string RocketStorageAddress { get; set; }
    }

    public partial class CreateMinipoolFunction : CreateMinipoolFunctionBase { }

    [Function("createMinipool", "address")]
    public class CreateMinipoolFunctionBase : FunctionMessage
    {
        [Parameter("address", "_nodeAddress", 1)]
        public virtual string NodeAddress { get; set; }
        [Parameter("uint256", "_salt", 2)]
        public virtual BigInteger Salt { get; set; }
    }

    public partial class CreateVacantMinipoolFunction : CreateVacantMinipoolFunctionBase { }

    [Function("createVacantMinipool", "address")]
    public class CreateVacantMinipoolFunctionBase : FunctionMessage
    {
        [Parameter("address", "_nodeAddress", 1)]
        public virtual string NodeAddress { get; set; }
        [Parameter("uint256", "_salt", 2)]
        public virtual BigInteger Salt { get; set; }
        [Parameter("bytes", "_validatorPubkey", 3)]
        public virtual byte[] ValidatorPubkey { get; set; }
        [Parameter("uint256", "_bondAmount", 4)]
        public virtual BigInteger BondAmount { get; set; }
        [Parameter("uint256", "_currentBalance", 5)]
        public virtual BigInteger CurrentBalance { get; set; }
    }

    public partial class DecrementNodeStakingMinipoolCountFunction : DecrementNodeStakingMinipoolCountFunctionBase { }

    [Function("decrementNodeStakingMinipoolCount")]
    public class DecrementNodeStakingMinipoolCountFunctionBase : FunctionMessage
    {
        [Parameter("address", "_nodeAddress", 1)]
        public virtual string NodeAddress { get; set; }
    }

    public partial class DestroyMinipoolFunction : DestroyMinipoolFunctionBase { }

    [Function("destroyMinipool")]
    public class DestroyMinipoolFunctionBase : FunctionMessage
    {

    }

    public partial class GetActiveMinipoolCountFunction : GetActiveMinipoolCountFunctionBase { }

    [Function("getActiveMinipoolCount", "uint256")]
    public class GetActiveMinipoolCountFunctionBase : FunctionMessage
    {

    }

    public partial class GetFinalisedMinipoolCountFunction : GetFinalisedMinipoolCountFunctionBase { }

    [Function("getFinalisedMinipoolCount", "uint256")]
    public class GetFinalisedMinipoolCountFunctionBase : FunctionMessage
    {

    }

    public partial class GetMinipoolAtFunction : GetMinipoolAtFunctionBase { }

    [Function("getMinipoolAt", "address")]
    public class GetMinipoolAtFunctionBase : FunctionMessage
    {
        [Parameter("uint256", "_index", 1)]
        public virtual BigInteger Index { get; set; }
    }

    public partial class GetMinipoolByPubkeyFunction : GetMinipoolByPubkeyFunctionBase { }

    [Function("getMinipoolByPubkey", "address")]
    public class GetMinipoolByPubkeyFunctionBase : FunctionMessage
    {
        [Parameter("bytes", "_pubkey", 1)]
        public virtual byte[] Pubkey { get; set; }
    }

    public partial class GetMinipoolCountFunction : GetMinipoolCountFunctionBase { }

    [Function("getMinipoolCount", "uint256")]
    public class GetMinipoolCountFunctionBase : FunctionMessage
    {

    }

    public partial class GetMinipoolCountPerStatusFunction : GetMinipoolCountPerStatusFunctionBase { }

    [Function("getMinipoolCountPerStatus", typeof(GetMinipoolCountPerStatusOutputDTO))]
    public class GetMinipoolCountPerStatusFunctionBase : FunctionMessage
    {
        [Parameter("uint256", "_offset", 1)]
        public virtual BigInteger Offset { get; set; }
        [Parameter("uint256", "_limit", 2)]
        public virtual BigInteger Limit { get; set; }
    }

    public partial class GetMinipoolDepositTypeFunction : GetMinipoolDepositTypeFunctionBase { }

    [Function("getMinipoolDepositType", "uint8")]
    public class GetMinipoolDepositTypeFunctionBase : FunctionMessage
    {
        [Parameter("address", "_minipoolAddress", 1)]
        public virtual string MinipoolAddress { get; set; }
    }

    public partial class GetMinipoolDestroyedFunction : GetMinipoolDestroyedFunctionBase { }

    [Function("getMinipoolDestroyed", "bool")]
    public class GetMinipoolDestroyedFunctionBase : FunctionMessage
    {
        [Parameter("address", "_minipoolAddress", 1)]
        public virtual string MinipoolAddress { get; set; }
    }

    public partial class GetMinipoolExistsFunction : GetMinipoolExistsFunctionBase { }

    [Function("getMinipoolExists", "bool")]
    public class GetMinipoolExistsFunctionBase : FunctionMessage
    {
        [Parameter("address", "_minipoolAddress", 1)]
        public virtual string MinipoolAddress { get; set; }
    }

    public partial class GetMinipoolPubkeyFunction : GetMinipoolPubkeyFunctionBase { }

    [Function("getMinipoolPubkey", "bytes")]
    public class GetMinipoolPubkeyFunctionBase : FunctionMessage
    {
        [Parameter("address", "_minipoolAddress", 1)]
        public virtual string MinipoolAddress { get; set; }
    }

    public partial class GetMinipoolRPLSlashedFunction : GetMinipoolRPLSlashedFunctionBase { }

    [Function("getMinipoolRPLSlashed", "bool")]
    public class GetMinipoolRPLSlashedFunctionBase : FunctionMessage
    {
        [Parameter("address", "_minipoolAddress", 1)]
        public virtual string MinipoolAddress { get; set; }
    }

    public partial class GetMinipoolWithdrawalCredentialsFunction : GetMinipoolWithdrawalCredentialsFunctionBase { }

    [Function("getMinipoolWithdrawalCredentials", "bytes")]
    public class GetMinipoolWithdrawalCredentialsFunctionBase : FunctionMessage
    {
        [Parameter("address", "_minipoolAddress", 1)]
        public virtual string MinipoolAddress { get; set; }
    }

    public partial class GetNodeActiveMinipoolCountFunction : GetNodeActiveMinipoolCountFunctionBase { }

    [Function("getNodeActiveMinipoolCount", "uint256")]
    public class GetNodeActiveMinipoolCountFunctionBase : FunctionMessage
    {
        [Parameter("address", "_nodeAddress", 1)]
        public virtual string NodeAddress { get; set; }
    }

    public partial class GetNodeFinalisedMinipoolCountFunction : GetNodeFinalisedMinipoolCountFunctionBase { }

    [Function("getNodeFinalisedMinipoolCount", "uint256")]
    public class GetNodeFinalisedMinipoolCountFunctionBase : FunctionMessage
    {
        [Parameter("address", "_nodeAddress", 1)]
        public virtual string NodeAddress { get; set; }
    }

    public partial class GetNodeMinipoolAtFunction : GetNodeMinipoolAtFunctionBase { }

    [Function("getNodeMinipoolAt", "address")]
    public class GetNodeMinipoolAtFunctionBase : FunctionMessage
    {
        [Parameter("address", "_nodeAddress", 1)]
        public virtual string NodeAddress { get; set; }
        [Parameter("uint256", "_index", 2)]
        public virtual BigInteger Index { get; set; }
    }

    public partial class GetNodeMinipoolCountFunction : GetNodeMinipoolCountFunctionBase { }

    [Function("getNodeMinipoolCount", "uint256")]
    public class GetNodeMinipoolCountFunctionBase : FunctionMessage
    {
        [Parameter("address", "_nodeAddress", 1)]
        public virtual string NodeAddress { get; set; }
    }

    public partial class GetNodeStakingMinipoolCountFunction : GetNodeStakingMinipoolCountFunctionBase { }

    [Function("getNodeStakingMinipoolCount", "uint256")]
    public class GetNodeStakingMinipoolCountFunctionBase : FunctionMessage
    {
        [Parameter("address", "_nodeAddress", 1)]
        public virtual string NodeAddress { get; set; }
    }

    public partial class GetNodeStakingMinipoolCountBySizeFunction : GetNodeStakingMinipoolCountBySizeFunctionBase { }

    [Function("getNodeStakingMinipoolCountBySize", "uint256")]
    public class GetNodeStakingMinipoolCountBySizeFunctionBase : FunctionMessage
    {
        [Parameter("address", "_nodeAddress", 1)]
        public virtual string NodeAddress { get; set; }
        [Parameter("uint256", "_depositSize", 2)]
        public virtual BigInteger DepositSize { get; set; }
    }

    public partial class GetNodeValidatingMinipoolAtFunction : GetNodeValidatingMinipoolAtFunctionBase { }

    [Function("getNodeValidatingMinipoolAt", "address")]
    public class GetNodeValidatingMinipoolAtFunctionBase : FunctionMessage
    {
        [Parameter("address", "_nodeAddress", 1)]
        public virtual string NodeAddress { get; set; }
        [Parameter("uint256", "_index", 2)]
        public virtual BigInteger Index { get; set; }
    }

    public partial class GetNodeValidatingMinipoolCountFunction : GetNodeValidatingMinipoolCountFunctionBase { }

    [Function("getNodeValidatingMinipoolCount", "uint256")]
    public class GetNodeValidatingMinipoolCountFunctionBase : FunctionMessage
    {
        [Parameter("address", "_nodeAddress", 1)]
        public virtual string NodeAddress { get; set; }
    }

    public partial class GetPrelaunchMinipoolsFunction : GetPrelaunchMinipoolsFunctionBase { }

    [Function("getPrelaunchMinipools", "address[]")]
    public class GetPrelaunchMinipoolsFunctionBase : FunctionMessage
    {
        [Parameter("uint256", "_offset", 1)]
        public virtual BigInteger Offset { get; set; }
        [Parameter("uint256", "_limit", 2)]
        public virtual BigInteger Limit { get; set; }
    }

    public partial class GetStakingMinipoolCountFunction : GetStakingMinipoolCountFunctionBase { }

    [Function("getStakingMinipoolCount", "uint256")]
    public class GetStakingMinipoolCountFunctionBase : FunctionMessage
    {

    }

    public partial class GetVacantMinipoolAtFunction : GetVacantMinipoolAtFunctionBase { }

    [Function("getVacantMinipoolAt", "address")]
    public class GetVacantMinipoolAtFunctionBase : FunctionMessage
    {
        [Parameter("uint256", "_index", 1)]
        public virtual BigInteger Index { get; set; }
    }

    public partial class GetVacantMinipoolCountFunction : GetVacantMinipoolCountFunctionBase { }

    [Function("getVacantMinipoolCount", "uint256")]
    public class GetVacantMinipoolCountFunctionBase : FunctionMessage
    {

    }

    public partial class IncrementNodeFinalisedMinipoolCountFunction : IncrementNodeFinalisedMinipoolCountFunctionBase { }

    [Function("incrementNodeFinalisedMinipoolCount")]
    public class IncrementNodeFinalisedMinipoolCountFunctionBase : FunctionMessage
    {
        [Parameter("address", "_nodeAddress", 1)]
        public virtual string NodeAddress { get; set; }
    }

    public partial class IncrementNodeStakingMinipoolCountFunction : IncrementNodeStakingMinipoolCountFunctionBase { }

    [Function("incrementNodeStakingMinipoolCount")]
    public class IncrementNodeStakingMinipoolCountFunctionBase : FunctionMessage
    {
        [Parameter("address", "_nodeAddress", 1)]
        public virtual string NodeAddress { get; set; }
    }

    public partial class RemoveVacantMinipoolFunction : RemoveVacantMinipoolFunctionBase { }

    [Function("removeVacantMinipool")]
    public class RemoveVacantMinipoolFunctionBase : FunctionMessage
    {

    }

    public partial class SetMinipoolPubkeyFunction : SetMinipoolPubkeyFunctionBase { }

    [Function("setMinipoolPubkey")]
    public class SetMinipoolPubkeyFunctionBase : FunctionMessage
    {
        [Parameter("bytes", "_pubkey", 1)]
        public virtual byte[] Pubkey { get; set; }
    }

    public partial class TryDistributeFunction : TryDistributeFunctionBase { }

    [Function("tryDistribute")]
    public class TryDistributeFunctionBase : FunctionMessage
    {
        [Parameter("address", "_nodeAddress", 1)]
        public virtual string NodeAddress { get; set; }
    }

    public partial class UpdateNodeStakingMinipoolCountFunction : UpdateNodeStakingMinipoolCountFunctionBase { }

    [Function("updateNodeStakingMinipoolCount")]
    public class UpdateNodeStakingMinipoolCountFunctionBase : FunctionMessage
    {
        [Parameter("uint256", "_previousBond", 1)]
        public virtual BigInteger PreviousBond { get; set; }
        [Parameter("uint256", "_newBond", 2)]
        public virtual BigInteger NewBond { get; set; }
        [Parameter("uint256", "_previousFee", 3)]
        public virtual BigInteger PreviousFee { get; set; }
        [Parameter("uint256", "_newFee", 4)]
        public virtual BigInteger NewFee { get; set; }
    }

    public partial class VersionFunction : VersionFunctionBase { }

    [Function("version", "uint8")]
    public class VersionFunctionBase : FunctionMessage
    {

    }

    public partial class BeginBondReductionEventDTO : BeginBondReductionEventDTOBase { }

    [Event("BeginBondReduction")]
    public class BeginBondReductionEventDTOBase : IEventDTO
    {
        [Parameter("address", "minipool", 1, true )]
        public virtual string Minipool { get; set; }
        [Parameter("uint256", "time", 2, false )]
        public virtual BigInteger Time { get; set; }
    }

    public partial class CancelReductionVotedEventDTO : CancelReductionVotedEventDTOBase { }

    [Event("CancelReductionVoted")]
    public class CancelReductionVotedEventDTOBase : IEventDTO
    {
        [Parameter("address", "minipool", 1, true )]
        public virtual string Minipool { get; set; }
        [Parameter("address", "member", 2, true )]
        public virtual string Member { get; set; }
        [Parameter("uint256", "time", 3, false )]
        public virtual BigInteger Time { get; set; }
    }

    public partial class MinipoolCreatedEventDTO : MinipoolCreatedEventDTOBase { }

    [Event("MinipoolCreated")]
    public class MinipoolCreatedEventDTOBase : IEventDTO
    {
        [Parameter("address", "minipool", 1, true )]
        public virtual string Minipool { get; set; }
        [Parameter("address", "node", 2, true )]
        public virtual string Node { get; set; }
        [Parameter("uint256", "time", 3, false )]
        public virtual BigInteger Time { get; set; }
    }

    public partial class MinipoolDestroyedEventDTO : MinipoolDestroyedEventDTOBase { }

    [Event("MinipoolDestroyed")]
    public class MinipoolDestroyedEventDTOBase : IEventDTO
    {
        [Parameter("address", "minipool", 1, true )]
        public virtual string Minipool { get; set; }
        [Parameter("address", "node", 2, true )]
        public virtual string Node { get; set; }
        [Parameter("uint256", "time", 3, false )]
        public virtual BigInteger Time { get; set; }
    }

    public partial class ReductionCancelledEventDTO : ReductionCancelledEventDTOBase { }

    [Event("ReductionCancelled")]
    public class ReductionCancelledEventDTOBase : IEventDTO
    {
        [Parameter("address", "minipool", 1, true )]
        public virtual string Minipool { get; set; }
        [Parameter("uint256", "time", 2, false )]
        public virtual BigInteger Time { get; set; }
    }









    public partial class GetActiveMinipoolCountOutputDTO : GetActiveMinipoolCountOutputDTOBase { }

    [FunctionOutput]
    public class GetActiveMinipoolCountOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("uint256", "", 1)]
        public virtual BigInteger ReturnValue1 { get; set; }
    }

    public partial class GetFinalisedMinipoolCountOutputDTO : GetFinalisedMinipoolCountOutputDTOBase { }

    [FunctionOutput]
    public class GetFinalisedMinipoolCountOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("uint256", "", 1)]
        public virtual BigInteger ReturnValue1 { get; set; }
    }

    public partial class GetMinipoolAtOutputDTO : GetMinipoolAtOutputDTOBase { }

    [FunctionOutput]
    public class GetMinipoolAtOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("address", "", 1)]
        public virtual string ReturnValue1 { get; set; }
    }

    public partial class GetMinipoolByPubkeyOutputDTO : GetMinipoolByPubkeyOutputDTOBase { }

    [FunctionOutput]
    public class GetMinipoolByPubkeyOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("address", "", 1)]
        public virtual string ReturnValue1 { get; set; }
    }

    public partial class GetMinipoolCountOutputDTO : GetMinipoolCountOutputDTOBase { }

    [FunctionOutput]
    public class GetMinipoolCountOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("uint256", "", 1)]
        public virtual BigInteger ReturnValue1 { get; set; }
    }

    public partial class GetMinipoolCountPerStatusOutputDTO : GetMinipoolCountPerStatusOutputDTOBase { }

    [FunctionOutput]
    public class GetMinipoolCountPerStatusOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("uint256", "initialisedCount", 1)]
        public virtual BigInteger InitialisedCount { get; set; }
        [Parameter("uint256", "prelaunchCount", 2)]
        public virtual BigInteger PrelaunchCount { get; set; }
        [Parameter("uint256", "stakingCount", 3)]
        public virtual BigInteger StakingCount { get; set; }
        [Parameter("uint256", "withdrawableCount", 4)]
        public virtual BigInteger WithdrawableCount { get; set; }
        [Parameter("uint256", "dissolvedCount", 5)]
        public virtual BigInteger DissolvedCount { get; set; }
    }

    public partial class GetMinipoolDepositTypeOutputDTO : GetMinipoolDepositTypeOutputDTOBase { }

    [FunctionOutput]
    public class GetMinipoolDepositTypeOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("uint8", "", 1)]
        public virtual byte ReturnValue1 { get; set; }
    }

    public partial class GetMinipoolDestroyedOutputDTO : GetMinipoolDestroyedOutputDTOBase { }

    [FunctionOutput]
    public class GetMinipoolDestroyedOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("bool", "", 1)]
        public virtual bool ReturnValue1 { get; set; }
    }

    public partial class GetMinipoolExistsOutputDTO : GetMinipoolExistsOutputDTOBase { }

    [FunctionOutput]
    public class GetMinipoolExistsOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("bool", "", 1)]
        public virtual bool ReturnValue1 { get; set; }
    }

    public partial class GetMinipoolPubkeyOutputDTO : GetMinipoolPubkeyOutputDTOBase { }

    [FunctionOutput]
    public class GetMinipoolPubkeyOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("bytes", "", 1)]
        public virtual byte[] ReturnValue1 { get; set; }
    }

    public partial class GetMinipoolRPLSlashedOutputDTO : GetMinipoolRPLSlashedOutputDTOBase { }

    [FunctionOutput]
    public class GetMinipoolRPLSlashedOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("bool", "", 1)]
        public virtual bool ReturnValue1 { get; set; }
    }

    public partial class GetMinipoolWithdrawalCredentialsOutputDTO : GetMinipoolWithdrawalCredentialsOutputDTOBase { }

    [FunctionOutput]
    public class GetMinipoolWithdrawalCredentialsOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("bytes", "", 1)]
        public virtual byte[] ReturnValue1 { get; set; }
    }

    public partial class GetNodeActiveMinipoolCountOutputDTO : GetNodeActiveMinipoolCountOutputDTOBase { }

    [FunctionOutput]
    public class GetNodeActiveMinipoolCountOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("uint256", "", 1)]
        public virtual BigInteger ReturnValue1 { get; set; }
    }

    public partial class GetNodeFinalisedMinipoolCountOutputDTO : GetNodeFinalisedMinipoolCountOutputDTOBase { }

    [FunctionOutput]
    public class GetNodeFinalisedMinipoolCountOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("uint256", "", 1)]
        public virtual BigInteger ReturnValue1 { get; set; }
    }

    public partial class GetNodeMinipoolAtOutputDTO : GetNodeMinipoolAtOutputDTOBase { }

    [FunctionOutput]
    public class GetNodeMinipoolAtOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("address", "", 1)]
        public virtual string ReturnValue1 { get; set; }
    }

    public partial class GetNodeMinipoolCountOutputDTO : GetNodeMinipoolCountOutputDTOBase { }

    [FunctionOutput]
    public class GetNodeMinipoolCountOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("uint256", "", 1)]
        public virtual BigInteger ReturnValue1 { get; set; }
    }

    public partial class GetNodeStakingMinipoolCountOutputDTO : GetNodeStakingMinipoolCountOutputDTOBase { }

    [FunctionOutput]
    public class GetNodeStakingMinipoolCountOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("uint256", "", 1)]
        public virtual BigInteger ReturnValue1 { get; set; }
    }

    public partial class GetNodeStakingMinipoolCountBySizeOutputDTO : GetNodeStakingMinipoolCountBySizeOutputDTOBase { }

    [FunctionOutput]
    public class GetNodeStakingMinipoolCountBySizeOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("uint256", "", 1)]
        public virtual BigInteger ReturnValue1 { get; set; }
    }

    public partial class GetNodeValidatingMinipoolAtOutputDTO : GetNodeValidatingMinipoolAtOutputDTOBase { }

    [FunctionOutput]
    public class GetNodeValidatingMinipoolAtOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("address", "", 1)]
        public virtual string ReturnValue1 { get; set; }
    }

    public partial class GetNodeValidatingMinipoolCountOutputDTO : GetNodeValidatingMinipoolCountOutputDTOBase { }

    [FunctionOutput]
    public class GetNodeValidatingMinipoolCountOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("uint256", "", 1)]
        public virtual BigInteger ReturnValue1 { get; set; }
    }

    public partial class GetPrelaunchMinipoolsOutputDTO : GetPrelaunchMinipoolsOutputDTOBase { }

    [FunctionOutput]
    public class GetPrelaunchMinipoolsOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("address[]", "", 1)]
        public virtual List<string> ReturnValue1 { get; set; }
    }

    public partial class GetStakingMinipoolCountOutputDTO : GetStakingMinipoolCountOutputDTOBase { }

    [FunctionOutput]
    public class GetStakingMinipoolCountOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("uint256", "", 1)]
        public virtual BigInteger ReturnValue1 { get; set; }
    }

    public partial class GetVacantMinipoolAtOutputDTO : GetVacantMinipoolAtOutputDTOBase { }

    [FunctionOutput]
    public class GetVacantMinipoolAtOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("address", "", 1)]
        public virtual string ReturnValue1 { get; set; }
    }

    public partial class GetVacantMinipoolCountOutputDTO : GetVacantMinipoolCountOutputDTOBase { }

    [FunctionOutput]
    public class GetVacantMinipoolCountOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("uint256", "", 1)]
        public virtual BigInteger ReturnValue1 { get; set; }
    }













    public partial class VersionOutputDTO : VersionOutputDTOBase { }

    [FunctionOutput]
    public class VersionOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("uint8", "", 1)]
        public virtual byte ReturnValue1 { get; set; }
    }
}
