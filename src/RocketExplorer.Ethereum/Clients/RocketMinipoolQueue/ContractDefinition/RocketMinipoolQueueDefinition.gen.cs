// <auto-generated>
using System;
using System.Threading.Tasks;
using System.Collections.Generic;
using System.Numerics;
using Nethereum.Hex.HexTypes;
using Nethereum.ABI.FunctionEncoding.Attributes;
using Nethereum.RPC.Eth.DTOs;
using Nethereum.Contracts.CQS;
using Nethereum.Contracts;
using System.Threading;

namespace RocketExplorer.Ethereum.RocketMinipoolQueue.ContractDefinition
{


    public partial class RocketMinipoolQueueDeployment : RocketMinipoolQueueDeploymentBase
    {
        public RocketMinipoolQueueDeployment() : base(BYTECODE) { }
        public RocketMinipoolQueueDeployment(string byteCode) : base(byteCode) { }
    }

    public class RocketMinipoolQueueDeploymentBase : ContractDeploymentMessage
    {
        public static string BYTECODE = """
[
	{
		"inputs": [
			{
				"internalType": "contract RocketStorageInterface",
				"name": "_rocketStorageAddress",
				"type": "address"
			}
		],
		"stateMutability": "nonpayable",
		"type": "constructor"
	},
	{
		"anonymous": false,
		"inputs": [
			{
				"indexed": true,
				"internalType": "address",
				"name": "minipool",
				"type": "address"
			},
			{
				"indexed": true,
				"internalType": "bytes32",
				"name": "queueId",
				"type": "bytes32"
			},
			{
				"indexed": false,
				"internalType": "uint256",
				"name": "time",
				"type": "uint256"
			}
		],
		"name": "MinipoolDequeued",
		"type": "event"
	},
	{
		"anonymous": false,
		"inputs": [
			{
				"indexed": true,
				"internalType": "address",
				"name": "minipool",
				"type": "address"
			},
			{
				"indexed": true,
				"internalType": "bytes32",
				"name": "queueId",
				"type": "bytes32"
			},
			{
				"indexed": false,
				"internalType": "uint256",
				"name": "time",
				"type": "uint256"
			}
		],
		"name": "MinipoolEnqueued",
		"type": "event"
	},
	{
		"anonymous": false,
		"inputs": [
			{
				"indexed": true,
				"internalType": "address",
				"name": "minipool",
				"type": "address"
			},
			{
				"indexed": true,
				"internalType": "bytes32",
				"name": "queueId",
				"type": "bytes32"
			},
			{
				"indexed": false,
				"internalType": "uint256",
				"name": "time",
				"type": "uint256"
			}
		],
		"name": "MinipoolRemoved",
		"type": "event"
	},
	{
		"inputs": [
			{
				"internalType": "enum MinipoolDeposit",
				"name": "_depositType",
				"type": "uint8"
			}
		],
		"name": "dequeueMinipoolByDepositLegacy",
		"outputs": [
			{
				"internalType": "address",
				"name": "minipoolAddress",
				"type": "address"
			}
		],
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "uint256",
				"name": "_maxToDequeue",
				"type": "uint256"
			}
		],
		"name": "dequeueMinipools",
		"outputs": [
			{
				"internalType": "address[]",
				"name": "minipoolAddress",
				"type": "address[]"
			}
		],
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "address",
				"name": "_minipool",
				"type": "address"
			}
		],
		"name": "enqueueMinipool",
		"outputs": [],
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"inputs": [],
		"name": "getContainsLegacy",
		"outputs": [
			{
				"internalType": "bool",
				"name": "",
				"type": "bool"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [],
		"name": "getEffectiveCapacity",
		"outputs": [
			{
				"internalType": "uint256",
				"name": "",
				"type": "uint256"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [],
		"name": "getLength",
		"outputs": [
			{
				"internalType": "uint256",
				"name": "",
				"type": "uint256"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "enum MinipoolDeposit",
				"name": "_depositType",
				"type": "uint8"
			}
		],
		"name": "getLengthLegacy",
		"outputs": [
			{
				"internalType": "uint256",
				"name": "",
				"type": "uint256"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "uint256",
				"name": "_index",
				"type": "uint256"
			}
		],
		"name": "getMinipoolAt",
		"outputs": [
			{
				"internalType": "address",
				"name": "",
				"type": "address"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "address",
				"name": "_minipool",
				"type": "address"
			}
		],
		"name": "getMinipoolPosition",
		"outputs": [
			{
				"internalType": "int256",
				"name": "",
				"type": "int256"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [],
		"name": "getNextCapacityLegacy",
		"outputs": [
			{
				"internalType": "uint256",
				"name": "",
				"type": "uint256"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [],
		"name": "getNextDepositLegacy",
		"outputs": [
			{
				"internalType": "enum MinipoolDeposit",
				"name": "",
				"type": "uint8"
			},
			{
				"internalType": "uint256",
				"name": "",
				"type": "uint256"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [],
		"name": "getTotalCapacity",
		"outputs": [
			{
				"internalType": "uint256",
				"name": "",
				"type": "uint256"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [],
		"name": "getTotalLength",
		"outputs": [
			{
				"internalType": "uint256",
				"name": "",
				"type": "uint256"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "enum MinipoolDeposit",
				"name": "_depositType",
				"type": "uint8"
			}
		],
		"name": "removeMinipool",
		"outputs": [],
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"inputs": [],
		"name": "version",
		"outputs": [
			{
				"internalType": "uint8",
				"name": "",
				"type": "uint8"
			}
		],
		"stateMutability": "view",
		"type": "function"
	}
]
""";
        public RocketMinipoolQueueDeploymentBase() : base(BYTECODE) { }
        public RocketMinipoolQueueDeploymentBase(string byteCode) : base(byteCode) { }
        [Parameter("address", "_rocketStorageAddress", 1)]
        public virtual string RocketStorageAddress { get; set; }
    }

    public partial class DequeueMinipoolByDepositLegacyFunction : DequeueMinipoolByDepositLegacyFunctionBase { }

    [Function("dequeueMinipoolByDepositLegacy", "address")]
    public class DequeueMinipoolByDepositLegacyFunctionBase : FunctionMessage
    {
        [Parameter("uint8", "_depositType", 1)]
        public virtual byte DepositType { get; set; }
    }

    public partial class DequeueMinipoolsFunction : DequeueMinipoolsFunctionBase { }

    [Function("dequeueMinipools", "address[]")]
    public class DequeueMinipoolsFunctionBase : FunctionMessage
    {
        [Parameter("uint256", "_maxToDequeue", 1)]
        public virtual BigInteger MaxToDequeue { get; set; }
    }

    public partial class EnqueueMinipoolFunction : EnqueueMinipoolFunctionBase { }

    [Function("enqueueMinipool")]
    public class EnqueueMinipoolFunctionBase : FunctionMessage
    {
        [Parameter("address", "_minipool", 1)]
        public virtual string Minipool { get; set; }
    }

    public partial class GetContainsLegacyFunction : GetContainsLegacyFunctionBase { }

    [Function("getContainsLegacy", "bool")]
    public class GetContainsLegacyFunctionBase : FunctionMessage
    {

    }

    public partial class GetEffectiveCapacityFunction : GetEffectiveCapacityFunctionBase { }

    [Function("getEffectiveCapacity", "uint256")]
    public class GetEffectiveCapacityFunctionBase : FunctionMessage
    {

    }

    public partial class GetLengthFunction : GetLengthFunctionBase { }

    [Function("getLength", "uint256")]
    public class GetLengthFunctionBase : FunctionMessage
    {

    }

    public partial class GetLengthLegacyFunction : GetLengthLegacyFunctionBase { }

    [Function("getLengthLegacy", "uint256")]
    public class GetLengthLegacyFunctionBase : FunctionMessage
    {
        [Parameter("uint8", "_depositType", 1)]
        public virtual byte DepositType { get; set; }
    }

    public partial class GetMinipoolAtFunction : GetMinipoolAtFunctionBase { }

    [Function("getMinipoolAt", "address")]
    public class GetMinipoolAtFunctionBase : FunctionMessage
    {
        [Parameter("uint256", "_index", 1)]
        public virtual BigInteger Index { get; set; }
    }

    public partial class GetMinipoolPositionFunction : GetMinipoolPositionFunctionBase { }

    [Function("getMinipoolPosition", "int256")]
    public class GetMinipoolPositionFunctionBase : FunctionMessage
    {
        [Parameter("address", "_minipool", 1)]
        public virtual string Minipool { get; set; }
    }

    public partial class GetNextCapacityLegacyFunction : GetNextCapacityLegacyFunctionBase { }

    [Function("getNextCapacityLegacy", "uint256")]
    public class GetNextCapacityLegacyFunctionBase : FunctionMessage
    {

    }

    public partial class GetNextDepositLegacyFunction : GetNextDepositLegacyFunctionBase { }

    [Function("getNextDepositLegacy", typeof(GetNextDepositLegacyOutputDTO))]
    public class GetNextDepositLegacyFunctionBase : FunctionMessage
    {

    }

    public partial class GetTotalCapacityFunction : GetTotalCapacityFunctionBase { }

    [Function("getTotalCapacity", "uint256")]
    public class GetTotalCapacityFunctionBase : FunctionMessage
    {

    }

    public partial class GetTotalLengthFunction : GetTotalLengthFunctionBase { }

    [Function("getTotalLength", "uint256")]
    public class GetTotalLengthFunctionBase : FunctionMessage
    {

    }

    public partial class RemoveMinipoolFunction : RemoveMinipoolFunctionBase { }

    [Function("removeMinipool")]
    public class RemoveMinipoolFunctionBase : FunctionMessage
    {
        [Parameter("uint8", "_depositType", 1)]
        public virtual byte DepositType { get; set; }
    }

    public partial class VersionFunction : VersionFunctionBase { }

    [Function("version", "uint8")]
    public class VersionFunctionBase : FunctionMessage
    {

    }

    public partial class MinipoolDequeuedEventDTO : MinipoolDequeuedEventDTOBase { }

    [Event("MinipoolDequeued")]
    public class MinipoolDequeuedEventDTOBase : IEventDTO
    {
        [Parameter("address", "minipool", 1, true )]
        public virtual string Minipool { get; set; }
        [Parameter("bytes32", "queueId", 2, true )]
        public virtual byte[] QueueId { get; set; }
        [Parameter("uint256", "time", 3, false )]
        public virtual BigInteger Time { get; set; }
    }

    public partial class MinipoolEnqueuedEventDTO : MinipoolEnqueuedEventDTOBase { }

    [Event("MinipoolEnqueued")]
    public class MinipoolEnqueuedEventDTOBase : IEventDTO
    {
        [Parameter("address", "minipool", 1, true )]
        public virtual string Minipool { get; set; }
        [Parameter("bytes32", "queueId", 2, true )]
        public virtual byte[] QueueId { get; set; }
        [Parameter("uint256", "time", 3, false )]
        public virtual BigInteger Time { get; set; }
    }

    public partial class MinipoolRemovedEventDTO : MinipoolRemovedEventDTOBase { }

    [Event("MinipoolRemoved")]
    public class MinipoolRemovedEventDTOBase : IEventDTO
    {
        [Parameter("address", "minipool", 1, true )]
        public virtual string Minipool { get; set; }
        [Parameter("bytes32", "queueId", 2, true )]
        public virtual byte[] QueueId { get; set; }
        [Parameter("uint256", "time", 3, false )]
        public virtual BigInteger Time { get; set; }
    }







    public partial class GetContainsLegacyOutputDTO : GetContainsLegacyOutputDTOBase { }

    [FunctionOutput]
    public class GetContainsLegacyOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("bool", "", 1)]
        public virtual bool ReturnValue1 { get; set; }
    }

    public partial class GetEffectiveCapacityOutputDTO : GetEffectiveCapacityOutputDTOBase { }

    [FunctionOutput]
    public class GetEffectiveCapacityOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("uint256", "", 1)]
        public virtual BigInteger ReturnValue1 { get; set; }
    }

    public partial class GetLengthOutputDTO : GetLengthOutputDTOBase { }

    [FunctionOutput]
    public class GetLengthOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("uint256", "", 1)]
        public virtual BigInteger ReturnValue1 { get; set; }
    }

    public partial class GetLengthLegacyOutputDTO : GetLengthLegacyOutputDTOBase { }

    [FunctionOutput]
    public class GetLengthLegacyOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("uint256", "", 1)]
        public virtual BigInteger ReturnValue1 { get; set; }
    }

    public partial class GetMinipoolAtOutputDTO : GetMinipoolAtOutputDTOBase { }

    [FunctionOutput]
    public class GetMinipoolAtOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("address", "", 1)]
        public virtual string ReturnValue1 { get; set; }
    }

    public partial class GetMinipoolPositionOutputDTO : GetMinipoolPositionOutputDTOBase { }

    [FunctionOutput]
    public class GetMinipoolPositionOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("int256", "", 1)]
        public virtual BigInteger ReturnValue1 { get; set; }
    }

    public partial class GetNextCapacityLegacyOutputDTO : GetNextCapacityLegacyOutputDTOBase { }

    [FunctionOutput]
    public class GetNextCapacityLegacyOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("uint256", "", 1)]
        public virtual BigInteger ReturnValue1 { get; set; }
    }

    public partial class GetNextDepositLegacyOutputDTO : GetNextDepositLegacyOutputDTOBase { }

    [FunctionOutput]
    public class GetNextDepositLegacyOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("uint8", "", 1)]
        public virtual byte ReturnValue1 { get; set; }
        [Parameter("uint256", "", 2)]
        public virtual BigInteger ReturnValue2 { get; set; }
    }

    public partial class GetTotalCapacityOutputDTO : GetTotalCapacityOutputDTOBase { }

    [FunctionOutput]
    public class GetTotalCapacityOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("uint256", "", 1)]
        public virtual BigInteger ReturnValue1 { get; set; }
    }

    public partial class GetTotalLengthOutputDTO : GetTotalLengthOutputDTOBase { }

    [FunctionOutput]
    public class GetTotalLengthOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("uint256", "", 1)]
        public virtual BigInteger ReturnValue1 { get; set; }
    }



    public partial class VersionOutputDTO : VersionOutputDTOBase { }

    [FunctionOutput]
    public class VersionOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("uint8", "", 1)]
        public virtual byte ReturnValue1 { get; set; }
    }
}
