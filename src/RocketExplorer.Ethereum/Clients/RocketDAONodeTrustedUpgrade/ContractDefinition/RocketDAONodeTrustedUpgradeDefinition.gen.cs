// <auto-generated>
using System;
using System.Threading.Tasks;
using System.Collections.Generic;
using System.Numerics;
using Nethereum.Hex.HexTypes;
using Nethereum.ABI.FunctionEncoding.Attributes;
using Nethereum.RPC.Eth.DTOs;
using Nethereum.Contracts.CQS;
using Nethereum.Contracts;
using System.Threading;

namespace RocketExplorer.Ethereum.RocketDAONodeTrustedUpgrade.ContractDefinition
{


    public partial class RocketDAONodeTrustedUpgradeDeployment : RocketDAONodeTrustedUpgradeDeploymentBase
    {
        public RocketDAONodeTrustedUpgradeDeployment() : base(BYTECODE) { }
        public RocketDAONodeTrustedUpgradeDeployment(string byteCode) : base(byteCode) { }
    }

    public class RocketDAONodeTrustedUpgradeDeploymentBase : ContractDeploymentMessage
    {
        public static string BYTECODE = """
[
	{
		"inputs": [
			{
				"internalType": "contract RocketStorageInterface",
				"name": "_rocketStorageAddress",
				"type": "address"
			}
		],
		"stateMutability": "nonpayable",
		"type": "constructor"
	},
	{
		"anonymous": false,
		"inputs": [
			{
				"indexed": true,
				"internalType": "bytes32",
				"name": "name",
				"type": "bytes32"
			},
			{
				"indexed": false,
				"internalType": "uint256",
				"name": "time",
				"type": "uint256"
			}
		],
		"name": "ABIAdded",
		"type": "event"
	},
	{
		"anonymous": false,
		"inputs": [
			{
				"indexed": true,
				"internalType": "bytes32",
				"name": "name",
				"type": "bytes32"
			},
			{
				"indexed": false,
				"internalType": "uint256",
				"name": "time",
				"type": "uint256"
			}
		],
		"name": "ABIUpgraded",
		"type": "event"
	},
	{
		"anonymous": false,
		"inputs": [
			{
				"indexed": true,
				"internalType": "bytes32",
				"name": "name",
				"type": "bytes32"
			},
			{
				"indexed": true,
				"internalType": "address",
				"name": "newAddress",
				"type": "address"
			},
			{
				"indexed": false,
				"internalType": "uint256",
				"name": "time",
				"type": "uint256"
			}
		],
		"name": "ContractAdded",
		"type": "event"
	},
	{
		"anonymous": false,
		"inputs": [
			{
				"indexed": true,
				"internalType": "bytes32",
				"name": "name",
				"type": "bytes32"
			},
			{
				"indexed": true,
				"internalType": "address",
				"name": "oldAddress",
				"type": "address"
			},
			{
				"indexed": true,
				"internalType": "address",
				"name": "newAddress",
				"type": "address"
			},
			{
				"indexed": false,
				"internalType": "uint256",
				"name": "time",
				"type": "uint256"
			}
		],
		"name": "ContractUpgraded",
		"type": "event"
	},
	{
		"inputs": [
			{
				"internalType": "string",
				"name": "_type",
				"type": "string"
			},
			{
				"internalType": "string",
				"name": "_name",
				"type": "string"
			},
			{
				"internalType": "string",
				"name": "_contractAbi",
				"type": "string"
			},
			{
				"internalType": "address",
				"name": "_contractAddress",
				"type": "address"
			}
		],
		"name": "upgrade",
		"outputs": [],
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"inputs": [],
		"name": "version",
		"outputs": [
			{
				"internalType": "uint8",
				"name": "",
				"type": "uint8"
			}
		],
		"stateMutability": "view",
		"type": "function"
	}
]
""";
        public RocketDAONodeTrustedUpgradeDeploymentBase() : base(BYTECODE) { }
        public RocketDAONodeTrustedUpgradeDeploymentBase(string byteCode) : base(byteCode) { }
        [Parameter("address", "_rocketStorageAddress", 1)]
        public virtual string RocketStorageAddress { get; set; }
    }

    public partial class UpgradeFunction : UpgradeFunctionBase { }

    [Function("upgrade")]
    public class UpgradeFunctionBase : FunctionMessage
    {
        [Parameter("string", "_type", 1)]
        public virtual string Type { get; set; }
        [Parameter("string", "_name", 2)]
        public virtual string Name { get; set; }
        [Parameter("string", "_contractAbi", 3)]
        public virtual string ContractAbi { get; set; }
        [Parameter("address", "_contractAddress", 4)]
        public virtual string ContractAddress { get; set; }
    }

    public partial class VersionFunction : VersionFunctionBase { }

    [Function("version", "uint8")]
    public class VersionFunctionBase : FunctionMessage
    {

    }

    public partial class ABIAddedEventDTO : ABIAddedEventDTOBase { }

    [Event("ABIAdded")]
    public class ABIAddedEventDTOBase : IEventDTO
    {
        [Parameter("bytes32", "name", 1, true )]
        public virtual byte[] Name { get; set; }
        [Parameter("uint256", "time", 2, false )]
        public virtual BigInteger Time { get; set; }
    }

    public partial class ABIUpgradedEventDTO : ABIUpgradedEventDTOBase { }

    [Event("ABIUpgraded")]
    public class ABIUpgradedEventDTOBase : IEventDTO
    {
        [Parameter("bytes32", "name", 1, true )]
        public virtual byte[] Name { get; set; }
        [Parameter("uint256", "time", 2, false )]
        public virtual BigInteger Time { get; set; }
    }

    public partial class ContractAddedEventDTO : ContractAddedEventDTOBase { }

    [Event("ContractAdded")]
    public class ContractAddedEventDTOBase : IEventDTO
    {
        [Parameter("bytes32", "name", 1, true )]
        public virtual byte[] Name { get; set; }
        [Parameter("address", "newAddress", 2, true )]
        public virtual string NewAddress { get; set; }
        [Parameter("uint256", "time", 3, false )]
        public virtual BigInteger Time { get; set; }
    }

    public partial class ContractUpgradedEventDTO : ContractUpgradedEventDTOBase { }

    [Event("ContractUpgraded")]
    public class ContractUpgradedEventDTOBase : IEventDTO
    {
        [Parameter("bytes32", "name", 1, true )]
        public virtual byte[] Name { get; set; }
        [Parameter("address", "oldAddress", 2, true )]
        public virtual string OldAddress { get; set; }
        [Parameter("address", "newAddress", 3, true )]
        public virtual string NewAddress { get; set; }
        [Parameter("uint256", "time", 4, false )]
        public virtual BigInteger Time { get; set; }
    }



    public partial class VersionOutputDTO : VersionOutputDTOBase { }

    [FunctionOutput]
    public class VersionOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("uint8", "", 1)]
        public virtual byte ReturnValue1 { get; set; }
    }
}
