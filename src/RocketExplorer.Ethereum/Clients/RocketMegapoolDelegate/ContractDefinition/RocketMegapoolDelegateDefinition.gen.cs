// <auto-generated>
using System;
using System.Threading.Tasks;
using System.Collections.Generic;
using System.Numerics;
using Nethereum.Hex.HexTypes;
using Nethereum.ABI.FunctionEncoding.Attributes;
using Nethereum.RPC.Eth.DTOs;
using Nethereum.Contracts.CQS;
using Nethereum.Contracts;
using System.Threading;

namespace RocketExplorer.Ethereum.RocketMegapoolDelegate.ContractDefinition
{


    public partial class RocketMegapoolDelegateDeployment : RocketMegapoolDelegateDeploymentBase
    {
        public RocketMegapoolDelegateDeployment() : base(BYTECODE) { }
        public RocketMegapoolDelegateDeployment(string byteCode) : base(byteCode) { }
    }

    public class RocketMegapoolDelegateDeploymentBase : ContractDeploymentMessage
    {
        public static string BYTECODE = """
[
	{
		"inputs": [
			{
				"internalType": "contract RocketStorageInterface",
				"name": "_rocketStorageAddress",
				"type": "address"
			}
		],
		"stateMutability": "nonpayable",
		"type": "constructor"
	},
	{
		"anonymous": false,
		"inputs": [
			{
				"indexed": false,
				"internalType": "uint256",
				"name": "amount",
				"type": "uint256"
			},
			{
				"indexed": false,
				"internalType": "uint256",
				"name": "time",
				"type": "uint256"
			}
		],
		"name": "MegapoolBondReduced",
		"type": "event"
	},
	{
		"anonymous": false,
		"inputs": [
			{
				"indexed": false,
				"internalType": "uint256",
				"name": "amount",
				"type": "uint256"
			},
			{
				"indexed": false,
				"internalType": "uint256",
				"name": "time",
				"type": "uint256"
			}
		],
		"name": "MegapoolDebtIncreased",
		"type": "event"
	},
	{
		"anonymous": false,
		"inputs": [
			{
				"indexed": false,
				"internalType": "uint256",
				"name": "amount",
				"type": "uint256"
			},
			{
				"indexed": false,
				"internalType": "uint256",
				"name": "time",
				"type": "uint256"
			}
		],
		"name": "MegapoolDebtReduced",
		"type": "event"
	},
	{
		"anonymous": false,
		"inputs": [
			{
				"indexed": true,
				"internalType": "uint256",
				"name": "validatorId",
				"type": "uint256"
			},
			{
				"indexed": false,
				"internalType": "uint256",
				"name": "time",
				"type": "uint256"
			}
		],
		"name": "MegapoolValidatorAssigned",
		"type": "event"
	},
	{
		"anonymous": false,
		"inputs": [
			{
				"indexed": true,
				"internalType": "uint256",
				"name": "validatorId",
				"type": "uint256"
			},
			{
				"indexed": false,
				"internalType": "uint256",
				"name": "time",
				"type": "uint256"
			}
		],
		"name": "MegapoolValidatorDequeued",
		"type": "event"
	},
	{
		"anonymous": false,
		"inputs": [
			{
				"indexed": true,
				"internalType": "uint256",
				"name": "validatorId",
				"type": "uint256"
			},
			{
				"indexed": false,
				"internalType": "uint256",
				"name": "time",
				"type": "uint256"
			}
		],
		"name": "MegapoolValidatorDissolved",
		"type": "event"
	},
	{
		"anonymous": false,
		"inputs": [
			{
				"indexed": true,
				"internalType": "uint256",
				"name": "validatorId",
				"type": "uint256"
			},
			{
				"indexed": false,
				"internalType": "uint256",
				"name": "time",
				"type": "uint256"
			}
		],
		"name": "MegapoolValidatorEnqueued",
		"type": "event"
	},
	{
		"anonymous": false,
		"inputs": [
			{
				"indexed": true,
				"internalType": "uint32",
				"name": "validatorId",
				"type": "uint32"
			},
			{
				"indexed": false,
				"internalType": "uint256",
				"name": "time",
				"type": "uint256"
			}
		],
		"name": "MegapoolValidatorExited",
		"type": "event"
	},
	{
		"anonymous": false,
		"inputs": [
			{
				"indexed": true,
				"internalType": "uint256",
				"name": "validatorId",
				"type": "uint256"
			},
			{
				"indexed": false,
				"internalType": "uint256",
				"name": "time",
				"type": "uint256"
			}
		],
		"name": "MegapoolValidatorExiting",
		"type": "event"
	},
	{
		"anonymous": false,
		"inputs": [
			{
				"indexed": true,
				"internalType": "uint256",
				"name": "validatorId",
				"type": "uint256"
			},
			{
				"indexed": false,
				"internalType": "uint256",
				"name": "time",
				"type": "uint256"
			}
		],
		"name": "MegapoolValidatorStaked",
		"type": "event"
	},
	{
		"anonymous": false,
		"inputs": [
			{
				"indexed": false,
				"internalType": "uint256",
				"name": "amount",
				"type": "uint256"
			},
			{
				"indexed": false,
				"internalType": "uint256",
				"name": "time",
				"type": "uint256"
			}
		],
		"name": "RewardsClaimed",
		"type": "event"
	},
	{
		"anonymous": false,
		"inputs": [
			{
				"indexed": false,
				"internalType": "uint256",
				"name": "nodeAmount",
				"type": "uint256"
			},
			{
				"indexed": false,
				"internalType": "uint256",
				"name": "voterAmount",
				"type": "uint256"
			},
			{
				"indexed": false,
				"internalType": "uint256",
				"name": "rethAmount",
				"type": "uint256"
			},
			{
				"indexed": false,
				"internalType": "uint256",
				"name": "time",
				"type": "uint256"
			}
		],
		"name": "RewardsDistributed",
		"type": "event"
	},
	{
		"inputs": [
			{
				"internalType": "uint256",
				"name": "_amount",
				"type": "uint256"
			}
		],
		"name": "applyPenalty",
		"outputs": [],
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "uint32",
				"name": "_validatorId",
				"type": "uint32"
			}
		],
		"name": "assignFunds",
		"outputs": [],
		"stateMutability": "payable",
		"type": "function"
	},
	{
		"inputs": [],
		"name": "calculatePendingRewards",
		"outputs": [
			{
				"internalType": "uint256",
				"name": "nodeRewards",
				"type": "uint256"
			},
			{
				"internalType": "uint256",
				"name": "voterRewards",
				"type": "uint256"
			},
			{
				"internalType": "uint256",
				"name": "rethRewards",
				"type": "uint256"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "uint256",
				"name": "_amount",
				"type": "uint256"
			}
		],
		"name": "calculateRewards",
		"outputs": [
			{
				"internalType": "uint256",
				"name": "nodeRewards",
				"type": "uint256"
			},
			{
				"internalType": "uint256",
				"name": "voterRewards",
				"type": "uint256"
			},
			{
				"internalType": "uint256",
				"name": "rethRewards",
				"type": "uint256"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [],
		"name": "claim",
		"outputs": [],
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"inputs": [],
		"name": "deprecate",
		"outputs": [],
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "uint32",
				"name": "_validatorId",
				"type": "uint32"
			}
		],
		"name": "dequeue",
		"outputs": [],
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "uint32",
				"name": "_validatorId",
				"type": "uint32"
			}
		],
		"name": "dissolveValidator",
		"outputs": [],
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"inputs": [],
		"name": "distribute",
		"outputs": [],
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"inputs": [],
		"name": "getActiveValidatorCount",
		"outputs": [
			{
				"internalType": "uint32",
				"name": "",
				"type": "uint32"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [],
		"name": "getAssignedValue",
		"outputs": [
			{
				"internalType": "uint256",
				"name": "",
				"type": "uint256"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [],
		"name": "getDebt",
		"outputs": [
			{
				"internalType": "uint256",
				"name": "",
				"type": "uint256"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [],
		"name": "getExitingValidatorCount",
		"outputs": [
			{
				"internalType": "uint32",
				"name": "",
				"type": "uint32"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [],
		"name": "getExpirationBlock",
		"outputs": [
			{
				"internalType": "uint256",
				"name": "",
				"type": "uint256"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [],
		"name": "getLastDistributionBlock",
		"outputs": [
			{
				"internalType": "uint256",
				"name": "",
				"type": "uint256"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [],
		"name": "getNodeAddress",
		"outputs": [
			{
				"internalType": "address",
				"name": "",
				"type": "address"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [],
		"name": "getNodeBond",
		"outputs": [
			{
				"internalType": "uint256",
				"name": "",
				"type": "uint256"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [],
		"name": "getPendingRewards",
		"outputs": [
			{
				"internalType": "uint256",
				"name": "",
				"type": "uint256"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [],
		"name": "getRefundValue",
		"outputs": [
			{
				"internalType": "uint256",
				"name": "",
				"type": "uint256"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [],
		"name": "getSoonestWithdrawableEpoch",
		"outputs": [
			{
				"internalType": "uint64",
				"name": "",
				"type": "uint64"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [],
		"name": "getUserCapital",
		"outputs": [
			{
				"internalType": "uint256",
				"name": "",
				"type": "uint256"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [],
		"name": "getValidatorCount",
		"outputs": [
			{
				"internalType": "uint32",
				"name": "",
				"type": "uint32"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "uint32",
				"name": "_validatorId",
				"type": "uint32"
			}
		],
		"name": "getValidatorInfo",
		"outputs": [
			{
				"components": [
					{
						"internalType": "bytes",
						"name": "pubKey",
						"type": "bytes"
					},
					{
						"internalType": "uint32",
						"name": "lastAssignmentTime",
						"type": "uint32"
					},
					{
						"internalType": "uint32",
						"name": "lastRequestedValue",
						"type": "uint32"
					},
					{
						"internalType": "uint32",
						"name": "lastRequestedBond",
						"type": "uint32"
					},
					{
						"internalType": "uint32",
						"name": "depositValue",
						"type": "uint32"
					},
					{
						"internalType": "bool",
						"name": "staked",
						"type": "bool"
					},
					{
						"internalType": "bool",
						"name": "exited",
						"type": "bool"
					},
					{
						"internalType": "bool",
						"name": "inQueue",
						"type": "bool"
					},
					{
						"internalType": "bool",
						"name": "inPrestake",
						"type": "bool"
					},
					{
						"internalType": "bool",
						"name": "expressUsed",
						"type": "bool"
					},
					{
						"internalType": "bool",
						"name": "dissolved",
						"type": "bool"
					},
					{
						"internalType": "bool",
						"name": "exiting",
						"type": "bool"
					},
					{
						"internalType": "uint64",
						"name": "validatorIndex",
						"type": "uint64"
					},
					{
						"internalType": "uint64",
						"name": "exitBalance",
						"type": "uint64"
					},
					{
						"internalType": "uint64",
						"name": "withdrawableEpoch",
						"type": "uint64"
					}
				],
				"internalType": "struct RocketMegapoolStorageLayout.ValidatorInfo",
				"name": "",
				"type": "tuple"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [],
		"name": "getWithdrawalCredentials",
		"outputs": [
			{
				"internalType": "bytes32",
				"name": "",
				"type": "bytes32"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "uint256",
				"name": "_bondAmount",
				"type": "uint256"
			},
			{
				"internalType": "bool",
				"name": "_useExpressTicket",
				"type": "bool"
			},
			{
				"internalType": "bytes",
				"name": "_validatorPubkey",
				"type": "bytes"
			},
			{
				"internalType": "bytes",
				"name": "_validatorSignature",
				"type": "bytes"
			},
			{
				"internalType": "bytes32",
				"name": "_depositDataRoot",
				"type": "bytes32"
			}
		],
		"name": "newValidator",
		"outputs": [],
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "uint32",
				"name": "_validatorId",
				"type": "uint32"
			},
			{
				"internalType": "uint64",
				"name": "_withdrawableEpoch",
				"type": "uint64"
			},
			{
				"internalType": "uint64",
				"name": "_slot",
				"type": "uint64"
			},
			{
				"internalType": "bytes32[]",
				"name": "_proof",
				"type": "bytes32[]"
			}
		],
		"name": "notifyExit",
		"outputs": [],
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "uint32",
				"name": "_validatorId",
				"type": "uint32"
			},
			{
				"internalType": "uint64",
				"name": "_withdrawalSlot",
				"type": "uint64"
			},
			{
				"internalType": "uint256",
				"name": "_withdrawalNum",
				"type": "uint256"
			},
			{
				"components": [
					{
						"internalType": "uint64",
						"name": "index",
						"type": "uint64"
					},
					{
						"internalType": "uint64",
						"name": "validatorIndex",
						"type": "uint64"
					},
					{
						"internalType": "bytes20",
						"name": "withdrawalCredentials",
						"type": "bytes20"
					},
					{
						"internalType": "uint64",
						"name": "amountInGwei",
						"type": "uint64"
					}
				],
				"internalType": "struct Withdrawal",
				"name": "_withdrawal",
				"type": "tuple"
			},
			{
				"internalType": "uint64",
				"name": "_slot",
				"type": "uint64"
			},
			{
				"internalType": "bytes32[]",
				"name": "_proof",
				"type": "bytes32[]"
			}
		],
		"name": "notifyFinalBalance",
		"outputs": [],
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "uint256",
				"name": "_amount",
				"type": "uint256"
			}
		],
		"name": "reduceBond",
		"outputs": [],
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"inputs": [],
		"name": "repayDebt",
		"outputs": [],
		"stateMutability": "payable",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "uint32",
				"name": "_validatorId",
				"type": "uint32"
			},
			{
				"components": [
					{
						"internalType": "uint64",
						"name": "slot",
						"type": "uint64"
					},
					{
						"internalType": "uint64",
						"name": "validatorIndex",
						"type": "uint64"
					},
					{
						"internalType": "bytes",
						"name": "pubkey",
						"type": "bytes"
					},
					{
						"internalType": "bytes32",
						"name": "withdrawalCredentials",
						"type": "bytes32"
					},
					{
						"internalType": "bytes32[]",
						"name": "witnesses",
						"type": "bytes32[]"
					}
				],
				"internalType": "struct ValidatorProof",
				"name": "_proof",
				"type": "tuple"
			}
		],
		"name": "stake",
		"outputs": [],
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"inputs": [],
		"name": "version",
		"outputs": [
			{
				"internalType": "uint256",
				"name": "",
				"type": "uint256"
			}
		],
		"stateMutability": "view",
		"type": "function"
	}
]
""";
        public RocketMegapoolDelegateDeploymentBase() : base(BYTECODE) { }
        public RocketMegapoolDelegateDeploymentBase(string byteCode) : base(byteCode) { }
        [Parameter("address", "_rocketStorageAddress", 1)]
        public virtual string RocketStorageAddress { get; set; }
    }

    public partial class ApplyPenaltyFunction : ApplyPenaltyFunctionBase { }

    [Function("applyPenalty")]
    public class ApplyPenaltyFunctionBase : FunctionMessage
    {
        [Parameter("uint256", "_amount", 1)]
        public virtual BigInteger Amount { get; set; }
    }

    public partial class AssignFundsFunction : AssignFundsFunctionBase { }

    [Function("assignFunds")]
    public class AssignFundsFunctionBase : FunctionMessage
    {
        [Parameter("uint32", "_validatorId", 1)]
        public virtual uint ValidatorId { get; set; }
    }

    public partial class CalculatePendingRewardsFunction : CalculatePendingRewardsFunctionBase { }

    [Function("calculatePendingRewards", typeof(CalculatePendingRewardsOutputDTO))]
    public class CalculatePendingRewardsFunctionBase : FunctionMessage
    {

    }

    public partial class CalculateRewardsFunction : CalculateRewardsFunctionBase { }

    [Function("calculateRewards", typeof(CalculateRewardsOutputDTO))]
    public class CalculateRewardsFunctionBase : FunctionMessage
    {
        [Parameter("uint256", "_amount", 1)]
        public virtual BigInteger Amount { get; set; }
    }

    public partial class ClaimFunction : ClaimFunctionBase { }

    [Function("claim")]
    public class ClaimFunctionBase : FunctionMessage
    {

    }

    public partial class DeprecateFunction : DeprecateFunctionBase { }

    [Function("deprecate")]
    public class DeprecateFunctionBase : FunctionMessage
    {

    }

    public partial class DequeueFunction : DequeueFunctionBase { }

    [Function("dequeue")]
    public class DequeueFunctionBase : FunctionMessage
    {
        [Parameter("uint32", "_validatorId", 1)]
        public virtual uint ValidatorId { get; set; }
    }

    public partial class DissolveValidatorFunction : DissolveValidatorFunctionBase { }

    [Function("dissolveValidator")]
    public class DissolveValidatorFunctionBase : FunctionMessage
    {
        [Parameter("uint32", "_validatorId", 1)]
        public virtual uint ValidatorId { get; set; }
    }

    public partial class DistributeFunction : DistributeFunctionBase { }

    [Function("distribute")]
    public class DistributeFunctionBase : FunctionMessage
    {

    }

    public partial class GetActiveValidatorCountFunction : GetActiveValidatorCountFunctionBase { }

    [Function("getActiveValidatorCount", "uint32")]
    public class GetActiveValidatorCountFunctionBase : FunctionMessage
    {

    }

    public partial class GetAssignedValueFunction : GetAssignedValueFunctionBase { }

    [Function("getAssignedValue", "uint256")]
    public class GetAssignedValueFunctionBase : FunctionMessage
    {

    }

    public partial class GetDebtFunction : GetDebtFunctionBase { }

    [Function("getDebt", "uint256")]
    public class GetDebtFunctionBase : FunctionMessage
    {

    }

    public partial class GetExitingValidatorCountFunction : GetExitingValidatorCountFunctionBase { }

    [Function("getExitingValidatorCount", "uint32")]
    public class GetExitingValidatorCountFunctionBase : FunctionMessage
    {

    }

    public partial class GetExpirationBlockFunction : GetExpirationBlockFunctionBase { }

    [Function("getExpirationBlock", "uint256")]
    public class GetExpirationBlockFunctionBase : FunctionMessage
    {

    }

    public partial class GetLastDistributionBlockFunction : GetLastDistributionBlockFunctionBase { }

    [Function("getLastDistributionBlock", "uint256")]
    public class GetLastDistributionBlockFunctionBase : FunctionMessage
    {

    }

    public partial class GetNodeAddressFunction : GetNodeAddressFunctionBase { }

    [Function("getNodeAddress", "address")]
    public class GetNodeAddressFunctionBase : FunctionMessage
    {

    }

    public partial class GetNodeBondFunction : GetNodeBondFunctionBase { }

    [Function("getNodeBond", "uint256")]
    public class GetNodeBondFunctionBase : FunctionMessage
    {

    }

    public partial class GetPendingRewardsFunction : GetPendingRewardsFunctionBase { }

    [Function("getPendingRewards", "uint256")]
    public class GetPendingRewardsFunctionBase : FunctionMessage
    {

    }

    public partial class GetRefundValueFunction : GetRefundValueFunctionBase { }

    [Function("getRefundValue", "uint256")]
    public class GetRefundValueFunctionBase : FunctionMessage
    {

    }

    public partial class GetSoonestWithdrawableEpochFunction : GetSoonestWithdrawableEpochFunctionBase { }

    [Function("getSoonestWithdrawableEpoch", "uint64")]
    public class GetSoonestWithdrawableEpochFunctionBase : FunctionMessage
    {

    }

    public partial class GetUserCapitalFunction : GetUserCapitalFunctionBase { }

    [Function("getUserCapital", "uint256")]
    public class GetUserCapitalFunctionBase : FunctionMessage
    {

    }

    public partial class GetValidatorCountFunction : GetValidatorCountFunctionBase { }

    [Function("getValidatorCount", "uint32")]
    public class GetValidatorCountFunctionBase : FunctionMessage
    {

    }

    public partial class GetValidatorInfoFunction : GetValidatorInfoFunctionBase { }

    [Function("getValidatorInfo", typeof(GetValidatorInfoOutputDTO))]
    public class GetValidatorInfoFunctionBase : FunctionMessage
    {
        [Parameter("uint32", "_validatorId", 1)]
        public virtual uint ValidatorId { get; set; }
    }

    public partial class GetWithdrawalCredentialsFunction : GetWithdrawalCredentialsFunctionBase { }

    [Function("getWithdrawalCredentials", "bytes32")]
    public class GetWithdrawalCredentialsFunctionBase : FunctionMessage
    {

    }

    public partial class NewValidatorFunction : NewValidatorFunctionBase { }

    [Function("newValidator")]
    public class NewValidatorFunctionBase : FunctionMessage
    {
        [Parameter("uint256", "_bondAmount", 1)]
        public virtual BigInteger BondAmount { get; set; }
        [Parameter("bool", "_useExpressTicket", 2)]
        public virtual bool UseExpressTicket { get; set; }
        [Parameter("bytes", "_validatorPubkey", 3)]
        public virtual byte[] ValidatorPubkey { get; set; }
        [Parameter("bytes", "_validatorSignature", 4)]
        public virtual byte[] ValidatorSignature { get; set; }
        [Parameter("bytes32", "_depositDataRoot", 5)]
        public virtual byte[] DepositDataRoot { get; set; }
    }

    public partial class NotifyExitFunction : NotifyExitFunctionBase { }

    [Function("notifyExit")]
    public class NotifyExitFunctionBase : FunctionMessage
    {
        [Parameter("uint32", "_validatorId", 1)]
        public virtual uint ValidatorId { get; set; }
        [Parameter("uint64", "_withdrawableEpoch", 2)]
        public virtual ulong WithdrawableEpoch { get; set; }
        [Parameter("uint64", "_slot", 3)]
        public virtual ulong Slot { get; set; }
        [Parameter("bytes32[]", "_proof", 4)]
        public virtual List<byte[]> Proof { get; set; }
    }

    public partial class NotifyFinalBalanceFunction : NotifyFinalBalanceFunctionBase { }

    [Function("notifyFinalBalance")]
    public class NotifyFinalBalanceFunctionBase : FunctionMessage
    {
        [Parameter("uint32", "_validatorId", 1)]
        public virtual uint ValidatorId { get; set; }
        [Parameter("uint64", "_withdrawalSlot", 2)]
        public virtual ulong WithdrawalSlot { get; set; }
        [Parameter("uint256", "_withdrawalNum", 3)]
        public virtual BigInteger WithdrawalNum { get; set; }
        [Parameter("tuple", "_withdrawal", 4)]
        public virtual Withdrawal Withdrawal { get; set; }
        [Parameter("uint64", "_slot", 5)]
        public virtual ulong Slot { get; set; }
        [Parameter("bytes32[]", "_proof", 6)]
        public virtual List<byte[]> Proof { get; set; }
    }

    public partial class ReduceBondFunction : ReduceBondFunctionBase { }

    [Function("reduceBond")]
    public class ReduceBondFunctionBase : FunctionMessage
    {
        [Parameter("uint256", "_amount", 1)]
        public virtual BigInteger Amount { get; set; }
    }

    public partial class RepayDebtFunction : RepayDebtFunctionBase { }

    [Function("repayDebt")]
    public class RepayDebtFunctionBase : FunctionMessage
    {

    }

    public partial class StakeFunction : StakeFunctionBase { }

    [Function("stake")]
    public class StakeFunctionBase : FunctionMessage
    {
        [Parameter("uint32", "_validatorId", 1)]
        public virtual uint ValidatorId { get; set; }
        [Parameter("tuple", "_proof", 2)]
        public virtual ValidatorProof Proof { get; set; }
    }

    public partial class VersionFunction : VersionFunctionBase { }

    [Function("version", "uint256")]
    public class VersionFunctionBase : FunctionMessage
    {

    }

    public partial class MegapoolBondReducedEventDTO : MegapoolBondReducedEventDTOBase { }

    [Event("MegapoolBondReduced")]
    public class MegapoolBondReducedEventDTOBase : IEventDTO
    {
        [Parameter("uint256", "amount", 1, false )]
        public virtual BigInteger Amount { get; set; }
        [Parameter("uint256", "time", 2, false )]
        public virtual BigInteger Time { get; set; }
    }

    public partial class MegapoolDebtIncreasedEventDTO : MegapoolDebtIncreasedEventDTOBase { }

    [Event("MegapoolDebtIncreased")]
    public class MegapoolDebtIncreasedEventDTOBase : IEventDTO
    {
        [Parameter("uint256", "amount", 1, false )]
        public virtual BigInteger Amount { get; set; }
        [Parameter("uint256", "time", 2, false )]
        public virtual BigInteger Time { get; set; }
    }

    public partial class MegapoolDebtReducedEventDTO : MegapoolDebtReducedEventDTOBase { }

    [Event("MegapoolDebtReduced")]
    public class MegapoolDebtReducedEventDTOBase : IEventDTO
    {
        [Parameter("uint256", "amount", 1, false )]
        public virtual BigInteger Amount { get; set; }
        [Parameter("uint256", "time", 2, false )]
        public virtual BigInteger Time { get; set; }
    }

    public partial class MegapoolValidatorAssignedEventDTO : MegapoolValidatorAssignedEventDTOBase { }

    [Event("MegapoolValidatorAssigned")]
    public class MegapoolValidatorAssignedEventDTOBase : IEventDTO
    {
        [Parameter("uint256", "validatorId", 1, true )]
        public virtual BigInteger ValidatorId { get; set; }
        [Parameter("uint256", "time", 2, false )]
        public virtual BigInteger Time { get; set; }
    }

    public partial class MegapoolValidatorDequeuedEventDTO : MegapoolValidatorDequeuedEventDTOBase { }

    [Event("MegapoolValidatorDequeued")]
    public class MegapoolValidatorDequeuedEventDTOBase : IEventDTO
    {
        [Parameter("uint256", "validatorId", 1, true )]
        public virtual BigInteger ValidatorId { get; set; }
        [Parameter("uint256", "time", 2, false )]
        public virtual BigInteger Time { get; set; }
    }

    public partial class MegapoolValidatorDissolvedEventDTO : MegapoolValidatorDissolvedEventDTOBase { }

    [Event("MegapoolValidatorDissolved")]
    public class MegapoolValidatorDissolvedEventDTOBase : IEventDTO
    {
        [Parameter("uint256", "validatorId", 1, true )]
        public virtual BigInteger ValidatorId { get; set; }
        [Parameter("uint256", "time", 2, false )]
        public virtual BigInteger Time { get; set; }
    }

    public partial class MegapoolValidatorEnqueuedEventDTO : MegapoolValidatorEnqueuedEventDTOBase { }

    [Event("MegapoolValidatorEnqueued")]
    public class MegapoolValidatorEnqueuedEventDTOBase : IEventDTO
    {
        [Parameter("uint256", "validatorId", 1, true )]
        public virtual BigInteger ValidatorId { get; set; }
        [Parameter("uint256", "time", 2, false )]
        public virtual BigInteger Time { get; set; }
    }

    public partial class MegapoolValidatorExitedEventDTO : MegapoolValidatorExitedEventDTOBase { }

    [Event("MegapoolValidatorExited")]
    public class MegapoolValidatorExitedEventDTOBase : IEventDTO
    {
        [Parameter("uint32", "validatorId", 1, true )]
        public virtual uint ValidatorId { get; set; }
        [Parameter("uint256", "time", 2, false )]
        public virtual BigInteger Time { get; set; }
    }

    public partial class MegapoolValidatorExitingEventDTO : MegapoolValidatorExitingEventDTOBase { }

    [Event("MegapoolValidatorExiting")]
    public class MegapoolValidatorExitingEventDTOBase : IEventDTO
    {
        [Parameter("uint256", "validatorId", 1, true )]
        public virtual BigInteger ValidatorId { get; set; }
        [Parameter("uint256", "time", 2, false )]
        public virtual BigInteger Time { get; set; }
    }

    public partial class MegapoolValidatorStakedEventDTO : MegapoolValidatorStakedEventDTOBase { }

    [Event("MegapoolValidatorStaked")]
    public class MegapoolValidatorStakedEventDTOBase : IEventDTO
    {
        [Parameter("uint256", "validatorId", 1, true )]
        public virtual BigInteger ValidatorId { get; set; }
        [Parameter("uint256", "time", 2, false )]
        public virtual BigInteger Time { get; set; }
    }

    public partial class RewardsClaimedEventDTO : RewardsClaimedEventDTOBase { }

    [Event("RewardsClaimed")]
    public class RewardsClaimedEventDTOBase : IEventDTO
    {
        [Parameter("uint256", "amount", 1, false )]
        public virtual BigInteger Amount { get; set; }
        [Parameter("uint256", "time", 2, false )]
        public virtual BigInteger Time { get; set; }
    }

    public partial class RewardsDistributedEventDTO : RewardsDistributedEventDTOBase { }

    [Event("RewardsDistributed")]
    public class RewardsDistributedEventDTOBase : IEventDTO
    {
        [Parameter("uint256", "nodeAmount", 1, false )]
        public virtual BigInteger NodeAmount { get; set; }
        [Parameter("uint256", "voterAmount", 2, false )]
        public virtual BigInteger VoterAmount { get; set; }
        [Parameter("uint256", "rethAmount", 3, false )]
        public virtual BigInteger RethAmount { get; set; }
        [Parameter("uint256", "time", 4, false )]
        public virtual BigInteger Time { get; set; }
    }





    public partial class CalculatePendingRewardsOutputDTO : CalculatePendingRewardsOutputDTOBase { }

    [FunctionOutput]
    public class CalculatePendingRewardsOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("uint256", "nodeRewards", 1)]
        public virtual BigInteger NodeRewards { get; set; }
        [Parameter("uint256", "voterRewards", 2)]
        public virtual BigInteger VoterRewards { get; set; }
        [Parameter("uint256", "rethRewards", 3)]
        public virtual BigInteger RethRewards { get; set; }
    }

    public partial class CalculateRewardsOutputDTO : CalculateRewardsOutputDTOBase { }

    [FunctionOutput]
    public class CalculateRewardsOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("uint256", "nodeRewards", 1)]
        public virtual BigInteger NodeRewards { get; set; }
        [Parameter("uint256", "voterRewards", 2)]
        public virtual BigInteger VoterRewards { get; set; }
        [Parameter("uint256", "rethRewards", 3)]
        public virtual BigInteger RethRewards { get; set; }
    }











    public partial class GetActiveValidatorCountOutputDTO : GetActiveValidatorCountOutputDTOBase { }

    [FunctionOutput]
    public class GetActiveValidatorCountOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("uint32", "", 1)]
        public virtual uint ReturnValue1 { get; set; }
    }

    public partial class GetAssignedValueOutputDTO : GetAssignedValueOutputDTOBase { }

    [FunctionOutput]
    public class GetAssignedValueOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("uint256", "", 1)]
        public virtual BigInteger ReturnValue1 { get; set; }
    }

    public partial class GetDebtOutputDTO : GetDebtOutputDTOBase { }

    [FunctionOutput]
    public class GetDebtOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("uint256", "", 1)]
        public virtual BigInteger ReturnValue1 { get; set; }
    }

    public partial class GetExitingValidatorCountOutputDTO : GetExitingValidatorCountOutputDTOBase { }

    [FunctionOutput]
    public class GetExitingValidatorCountOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("uint32", "", 1)]
        public virtual uint ReturnValue1 { get; set; }
    }

    public partial class GetExpirationBlockOutputDTO : GetExpirationBlockOutputDTOBase { }

    [FunctionOutput]
    public class GetExpirationBlockOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("uint256", "", 1)]
        public virtual BigInteger ReturnValue1 { get; set; }
    }

    public partial class GetLastDistributionBlockOutputDTO : GetLastDistributionBlockOutputDTOBase { }

    [FunctionOutput]
    public class GetLastDistributionBlockOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("uint256", "", 1)]
        public virtual BigInteger ReturnValue1 { get; set; }
    }

    public partial class GetNodeAddressOutputDTO : GetNodeAddressOutputDTOBase { }

    [FunctionOutput]
    public class GetNodeAddressOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("address", "", 1)]
        public virtual string ReturnValue1 { get; set; }
    }

    public partial class GetNodeBondOutputDTO : GetNodeBondOutputDTOBase { }

    [FunctionOutput]
    public class GetNodeBondOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("uint256", "", 1)]
        public virtual BigInteger ReturnValue1 { get; set; }
    }

    public partial class GetPendingRewardsOutputDTO : GetPendingRewardsOutputDTOBase { }

    [FunctionOutput]
    public class GetPendingRewardsOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("uint256", "", 1)]
        public virtual BigInteger ReturnValue1 { get; set; }
    }

    public partial class GetRefundValueOutputDTO : GetRefundValueOutputDTOBase { }

    [FunctionOutput]
    public class GetRefundValueOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("uint256", "", 1)]
        public virtual BigInteger ReturnValue1 { get; set; }
    }

    public partial class GetSoonestWithdrawableEpochOutputDTO : GetSoonestWithdrawableEpochOutputDTOBase { }

    [FunctionOutput]
    public class GetSoonestWithdrawableEpochOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("uint64", "", 1)]
        public virtual ulong ReturnValue1 { get; set; }
    }

    public partial class GetUserCapitalOutputDTO : GetUserCapitalOutputDTOBase { }

    [FunctionOutput]
    public class GetUserCapitalOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("uint256", "", 1)]
        public virtual BigInteger ReturnValue1 { get; set; }
    }

    public partial class GetValidatorCountOutputDTO : GetValidatorCountOutputDTOBase { }

    [FunctionOutput]
    public class GetValidatorCountOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("uint32", "", 1)]
        public virtual uint ReturnValue1 { get; set; }
    }

    public partial class GetValidatorInfoOutputDTO : GetValidatorInfoOutputDTOBase { }

    [FunctionOutput]
    public class GetValidatorInfoOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("tuple", "", 1)]
        public virtual ValidatorInfo ReturnValue1 { get; set; }
    }

    public partial class GetWithdrawalCredentialsOutputDTO : GetWithdrawalCredentialsOutputDTOBase { }

    [FunctionOutput]
    public class GetWithdrawalCredentialsOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("bytes32", "", 1)]
        public virtual byte[] ReturnValue1 { get; set; }
    }













    public partial class VersionOutputDTO : VersionOutputDTOBase { }

    [FunctionOutput]
    public class VersionOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("uint256", "", 1)]
        public virtual BigInteger ReturnValue1 { get; set; }
    }
}
