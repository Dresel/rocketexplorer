// <auto-generated>
using System;
using System.Threading.Tasks;
using System.Collections.Generic;
using System.Numerics;
using Nethereum.Hex.HexTypes;
using Nethereum.ABI.FunctionEncoding.Attributes;
using Nethereum.RPC.Eth.DTOs;
using Nethereum.Contracts.CQS;
using Nethereum.Contracts;
using System.Threading;

namespace RocketExplorer.Ethereum.RocketNodeManager.ContractDefinition
{


    public partial class RocketNodeManagerDeployment : RocketNodeManagerDeploymentBase
    {
        public RocketNodeManagerDeployment() : base(BYTECODE) { }
        public RocketNodeManagerDeployment(string byteCode) : base(byteCode) { }
    }

    public class RocketNodeManagerDeploymentBase : ContractDeploymentMessage
    {
        public static string BYTECODE = """
[
	{
		"inputs": [
			{
				"internalType": "contract RocketStorageInterface",
				"name": "_rocketStorageAddress",
				"type": "address"
			}
		],
		"stateMutability": "nonpayable",
		"type": "constructor"
	},
	{
		"anonymous": false,
		"inputs": [
			{
				"indexed": true,
				"internalType": "address",
				"name": "node",
				"type": "address"
			},
			{
				"indexed": true,
				"internalType": "address",
				"name": "withdrawalAddress",
				"type": "address"
			},
			{
				"indexed": false,
				"internalType": "uint256",
				"name": "time",
				"type": "uint256"
			}
		],
		"name": "NodeRPLWithdrawalAddressSet",
		"type": "event"
	},
	{
		"anonymous": false,
		"inputs": [
			{
				"indexed": true,
				"internalType": "address",
				"name": "node",
				"type": "address"
			},
			{
				"indexed": false,
				"internalType": "uint256",
				"name": "time",
				"type": "uint256"
			}
		],
		"name": "NodeRPLWithdrawalAddressUnset",
		"type": "event"
	},
	{
		"anonymous": false,
		"inputs": [
			{
				"indexed": true,
				"internalType": "address",
				"name": "node",
				"type": "address"
			},
			{
				"indexed": false,
				"internalType": "uint256",
				"name": "time",
				"type": "uint256"
			}
		],
		"name": "NodeRegistered",
		"type": "event"
	},
	{
		"anonymous": false,
		"inputs": [
			{
				"indexed": true,
				"internalType": "address",
				"name": "node",
				"type": "address"
			},
			{
				"indexed": false,
				"internalType": "uint256",
				"name": "network",
				"type": "uint256"
			}
		],
		"name": "NodeRewardNetworkChanged",
		"type": "event"
	},
	{
		"anonymous": false,
		"inputs": [
			{
				"indexed": true,
				"internalType": "address",
				"name": "node",
				"type": "address"
			},
			{
				"indexed": false,
				"internalType": "bool",
				"name": "state",
				"type": "bool"
			}
		],
		"name": "NodeSmoothingPoolStateChanged",
		"type": "event"
	},
	{
		"anonymous": false,
		"inputs": [
			{
				"indexed": true,
				"internalType": "address",
				"name": "node",
				"type": "address"
			},
			{
				"indexed": false,
				"internalType": "uint256",
				"name": "time",
				"type": "uint256"
			}
		],
		"name": "NodeTimezoneLocationSet",
		"type": "event"
	},
	{
		"inputs": [
			{
				"internalType": "address",
				"name": "_nodeAddress",
				"type": "address"
			}
		],
		"name": "confirmRPLWithdrawalAddress",
		"outputs": [],
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"inputs": [],
		"name": "deployMegapool",
		"outputs": [
			{
				"internalType": "address",
				"name": "",
				"type": "address"
			}
		],
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "address",
				"name": "_nodeAddress",
				"type": "address"
			}
		],
		"name": "getAverageNodeFee",
		"outputs": [
			{
				"internalType": "uint256",
				"name": "",
				"type": "uint256"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "address",
				"name": "_nodeAddress",
				"type": "address"
			}
		],
		"name": "getExpressTicketCount",
		"outputs": [
			{
				"internalType": "uint256",
				"name": "",
				"type": "uint256"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "address",
				"name": "_nodeAddress",
				"type": "address"
			}
		],
		"name": "getFeeDistributorInitialised",
		"outputs": [
			{
				"internalType": "bool",
				"name": "",
				"type": "bool"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "address",
				"name": "_nodeAddress",
				"type": "address"
			}
		],
		"name": "getMegapoolAddress",
		"outputs": [
			{
				"internalType": "address",
				"name": "",
				"type": "address"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "uint256",
				"name": "_offset",
				"type": "uint256"
			},
			{
				"internalType": "uint256",
				"name": "_limit",
				"type": "uint256"
			}
		],
		"name": "getNodeAddresses",
		"outputs": [
			{
				"internalType": "address[]",
				"name": "",
				"type": "address[]"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "uint256",
				"name": "_index",
				"type": "uint256"
			}
		],
		"name": "getNodeAt",
		"outputs": [
			{
				"internalType": "address",
				"name": "",
				"type": "address"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [],
		"name": "getNodeCount",
		"outputs": [
			{
				"internalType": "uint256",
				"name": "",
				"type": "uint256"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "uint256",
				"name": "_offset",
				"type": "uint256"
			},
			{
				"internalType": "uint256",
				"name": "_limit",
				"type": "uint256"
			}
		],
		"name": "getNodeCountPerTimezone",
		"outputs": [
			{
				"components": [
					{
						"internalType": "string",
						"name": "timezone",
						"type": "string"
					},
					{
						"internalType": "uint256",
						"name": "count",
						"type": "uint256"
					}
				],
				"internalType": "struct RocketNodeManagerInterface.TimezoneCount[]",
				"name": "",
				"type": "tuple[]"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "address",
				"name": "_nodeAddress",
				"type": "address"
			}
		],
		"name": "getNodeDetails",
		"outputs": [
			{
				"components": [
					{
						"internalType": "bool",
						"name": "exists",
						"type": "bool"
					},
					{
						"internalType": "uint256",
						"name": "registrationTime",
						"type": "uint256"
					},
					{
						"internalType": "string",
						"name": "timezoneLocation",
						"type": "string"
					},
					{
						"internalType": "bool",
						"name": "feeDistributorInitialised",
						"type": "bool"
					},
					{
						"internalType": "address",
						"name": "feeDistributorAddress",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "rewardNetwork",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "rplStake",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "effectiveRPLStake",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "minimumRPLStake",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "maximumRPLStake",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "ethMatched",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "ethMatchedLimit",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "minipoolCount",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "balanceETH",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "balanceRETH",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "balanceRPL",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "balanceOldRPL",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "depositCreditBalance",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "distributorBalanceUserETH",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "distributorBalanceNodeETH",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "withdrawalAddress",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "pendingWithdrawalAddress",
						"type": "address"
					},
					{
						"internalType": "bool",
						"name": "smoothingPoolRegistrationState",
						"type": "bool"
					},
					{
						"internalType": "uint256",
						"name": "smoothingPoolRegistrationChanged",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "nodeAddress",
						"type": "address"
					}
				],
				"internalType": "struct NodeDetails",
				"name": "nodeDetails",
				"type": "tuple"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "address",
				"name": "_nodeAddress",
				"type": "address"
			}
		],
		"name": "getNodeExists",
		"outputs": [
			{
				"internalType": "bool",
				"name": "",
				"type": "bool"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "address",
				"name": "_nodeAddress",
				"type": "address"
			}
		],
		"name": "getNodePendingRPLWithdrawalAddress",
		"outputs": [
			{
				"internalType": "address",
				"name": "",
				"type": "address"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "address",
				"name": "_nodeAddress",
				"type": "address"
			}
		],
		"name": "getNodePendingWithdrawalAddress",
		"outputs": [
			{
				"internalType": "address",
				"name": "",
				"type": "address"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "address",
				"name": "_nodeAddress",
				"type": "address"
			}
		],
		"name": "getNodeRPLWithdrawalAddress",
		"outputs": [
			{
				"internalType": "address",
				"name": "",
				"type": "address"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "address",
				"name": "_nodeAddress",
				"type": "address"
			}
		],
		"name": "getNodeRPLWithdrawalAddressIsSet",
		"outputs": [
			{
				"internalType": "bool",
				"name": "",
				"type": "bool"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "address",
				"name": "_nodeAddress",
				"type": "address"
			}
		],
		"name": "getNodeRegistrationTime",
		"outputs": [
			{
				"internalType": "uint256",
				"name": "",
				"type": "uint256"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "address",
				"name": "_nodeAddress",
				"type": "address"
			}
		],
		"name": "getNodeTimezoneLocation",
		"outputs": [
			{
				"internalType": "string",
				"name": "",
				"type": "string"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "address",
				"name": "_nodeAddress",
				"type": "address"
			}
		],
		"name": "getNodeWithdrawalAddress",
		"outputs": [
			{
				"internalType": "address",
				"name": "",
				"type": "address"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "address",
				"name": "_nodeAddress",
				"type": "address"
			}
		],
		"name": "getRewardNetwork",
		"outputs": [
			{
				"internalType": "uint256",
				"name": "",
				"type": "uint256"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "uint256",
				"name": "_offset",
				"type": "uint256"
			},
			{
				"internalType": "uint256",
				"name": "_limit",
				"type": "uint256"
			}
		],
		"name": "getSmoothingPoolRegisteredNodeCount",
		"outputs": [
			{
				"internalType": "uint256",
				"name": "",
				"type": "uint256"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "address",
				"name": "_nodeAddress",
				"type": "address"
			}
		],
		"name": "getSmoothingPoolRegistrationChanged",
		"outputs": [
			{
				"internalType": "uint256",
				"name": "",
				"type": "uint256"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "address",
				"name": "_nodeAddress",
				"type": "address"
			}
		],
		"name": "getSmoothingPoolRegistrationState",
		"outputs": [
			{
				"internalType": "bool",
				"name": "",
				"type": "bool"
			}
		],
		"stateMutability": "view",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "address",
				"name": "_nodeAddress",
				"type": "address"
			}
		],
		"name": "refundExpressTicket",
		"outputs": [],
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "string",
				"name": "_timezoneLocation",
				"type": "string"
			}
		],
		"name": "registerNode",
		"outputs": [],
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "address",
				"name": "_nodeAddress",
				"type": "address"
			},
			{
				"internalType": "address",
				"name": "_newRPLWithdrawalAddress",
				"type": "address"
			},
			{
				"internalType": "bool",
				"name": "_confirm",
				"type": "bool"
			}
		],
		"name": "setRPLWithdrawalAddress",
		"outputs": [],
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "address",
				"name": "_nodeAddress",
				"type": "address"
			},
			{
				"internalType": "uint256",
				"name": "_network",
				"type": "uint256"
			}
		],
		"name": "setRewardNetwork",
		"outputs": [],
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "bool",
				"name": "_state",
				"type": "bool"
			}
		],
		"name": "setSmoothingPoolRegistrationState",
		"outputs": [],
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "string",
				"name": "_timezoneLocation",
				"type": "string"
			}
		],
		"name": "setTimezoneLocation",
		"outputs": [],
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "address",
				"name": "_nodeAddress",
				"type": "address"
			}
		],
		"name": "unsetRPLWithdrawalAddress",
		"outputs": [],
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"inputs": [
			{
				"internalType": "address",
				"name": "_nodeAddress",
				"type": "address"
			}
		],
		"name": "useExpressTicket",
		"outputs": [],
		"stateMutability": "nonpayable",
		"type": "function"
	},
	{
		"inputs": [],
		"name": "version",
		"outputs": [
			{
				"internalType": "uint8",
				"name": "",
				"type": "uint8"
			}
		],
		"stateMutability": "view",
		"type": "function"
	}
]
""";
        public RocketNodeManagerDeploymentBase() : base(BYTECODE) { }
        public RocketNodeManagerDeploymentBase(string byteCode) : base(byteCode) { }
        [Parameter("address", "_rocketStorageAddress", 1)]
        public virtual string RocketStorageAddress { get; set; }
    }

    public partial class ConfirmRPLWithdrawalAddressFunction : ConfirmRPLWithdrawalAddressFunctionBase { }

    [Function("confirmRPLWithdrawalAddress")]
    public class ConfirmRPLWithdrawalAddressFunctionBase : FunctionMessage
    {
        [Parameter("address", "_nodeAddress", 1)]
        public virtual string NodeAddress { get; set; }
    }

    public partial class DeployMegapoolFunction : DeployMegapoolFunctionBase { }

    [Function("deployMegapool", "address")]
    public class DeployMegapoolFunctionBase : FunctionMessage
    {

    }

    public partial class GetAverageNodeFeeFunction : GetAverageNodeFeeFunctionBase { }

    [Function("getAverageNodeFee", "uint256")]
    public class GetAverageNodeFeeFunctionBase : FunctionMessage
    {
        [Parameter("address", "_nodeAddress", 1)]
        public virtual string NodeAddress { get; set; }
    }

    public partial class GetExpressTicketCountFunction : GetExpressTicketCountFunctionBase { }

    [Function("getExpressTicketCount", "uint256")]
    public class GetExpressTicketCountFunctionBase : FunctionMessage
    {
        [Parameter("address", "_nodeAddress", 1)]
        public virtual string NodeAddress { get; set; }
    }

    public partial class GetFeeDistributorInitialisedFunction : GetFeeDistributorInitialisedFunctionBase { }

    [Function("getFeeDistributorInitialised", "bool")]
    public class GetFeeDistributorInitialisedFunctionBase : FunctionMessage
    {
        [Parameter("address", "_nodeAddress", 1)]
        public virtual string NodeAddress { get; set; }
    }

    public partial class GetMegapoolAddressFunction : GetMegapoolAddressFunctionBase { }

    [Function("getMegapoolAddress", "address")]
    public class GetMegapoolAddressFunctionBase : FunctionMessage
    {
        [Parameter("address", "_nodeAddress", 1)]
        public virtual string NodeAddress { get; set; }
    }

    public partial class GetNodeAddressesFunction : GetNodeAddressesFunctionBase { }

    [Function("getNodeAddresses", "address[]")]
    public class GetNodeAddressesFunctionBase : FunctionMessage
    {
        [Parameter("uint256", "_offset", 1)]
        public virtual BigInteger Offset { get; set; }
        [Parameter("uint256", "_limit", 2)]
        public virtual BigInteger Limit { get; set; }
    }

    public partial class GetNodeAtFunction : GetNodeAtFunctionBase { }

    [Function("getNodeAt", "address")]
    public class GetNodeAtFunctionBase : FunctionMessage
    {
        [Parameter("uint256", "_index", 1)]
        public virtual BigInteger Index { get; set; }
    }

    public partial class GetNodeCountFunction : GetNodeCountFunctionBase { }

    [Function("getNodeCount", "uint256")]
    public class GetNodeCountFunctionBase : FunctionMessage
    {

    }

    public partial class GetNodeCountPerTimezoneFunction : GetNodeCountPerTimezoneFunctionBase { }

    [Function("getNodeCountPerTimezone", typeof(GetNodeCountPerTimezoneOutputDTO))]
    public class GetNodeCountPerTimezoneFunctionBase : FunctionMessage
    {
        [Parameter("uint256", "_offset", 1)]
        public virtual BigInteger Offset { get; set; }
        [Parameter("uint256", "_limit", 2)]
        public virtual BigInteger Limit { get; set; }
    }

    public partial class GetNodeDetailsFunction : GetNodeDetailsFunctionBase { }

    [Function("getNodeDetails", typeof(GetNodeDetailsOutputDTO))]
    public class GetNodeDetailsFunctionBase : FunctionMessage
    {
        [Parameter("address", "_nodeAddress", 1)]
        public virtual string NodeAddress { get; set; }
    }

    public partial class GetNodeExistsFunction : GetNodeExistsFunctionBase { }

    [Function("getNodeExists", "bool")]
    public class GetNodeExistsFunctionBase : FunctionMessage
    {
        [Parameter("address", "_nodeAddress", 1)]
        public virtual string NodeAddress { get; set; }
    }

    public partial class GetNodePendingRPLWithdrawalAddressFunction : GetNodePendingRPLWithdrawalAddressFunctionBase { }

    [Function("getNodePendingRPLWithdrawalAddress", "address")]
    public class GetNodePendingRPLWithdrawalAddressFunctionBase : FunctionMessage
    {
        [Parameter("address", "_nodeAddress", 1)]
        public virtual string NodeAddress { get; set; }
    }

    public partial class GetNodePendingWithdrawalAddressFunction : GetNodePendingWithdrawalAddressFunctionBase { }

    [Function("getNodePendingWithdrawalAddress", "address")]
    public class GetNodePendingWithdrawalAddressFunctionBase : FunctionMessage
    {
        [Parameter("address", "_nodeAddress", 1)]
        public virtual string NodeAddress { get; set; }
    }

    public partial class GetNodeRPLWithdrawalAddressFunction : GetNodeRPLWithdrawalAddressFunctionBase { }

    [Function("getNodeRPLWithdrawalAddress", "address")]
    public class GetNodeRPLWithdrawalAddressFunctionBase : FunctionMessage
    {
        [Parameter("address", "_nodeAddress", 1)]
        public virtual string NodeAddress { get; set; }
    }

    public partial class GetNodeRPLWithdrawalAddressIsSetFunction : GetNodeRPLWithdrawalAddressIsSetFunctionBase { }

    [Function("getNodeRPLWithdrawalAddressIsSet", "bool")]
    public class GetNodeRPLWithdrawalAddressIsSetFunctionBase : FunctionMessage
    {
        [Parameter("address", "_nodeAddress", 1)]
        public virtual string NodeAddress { get; set; }
    }

    public partial class GetNodeRegistrationTimeFunction : GetNodeRegistrationTimeFunctionBase { }

    [Function("getNodeRegistrationTime", "uint256")]
    public class GetNodeRegistrationTimeFunctionBase : FunctionMessage
    {
        [Parameter("address", "_nodeAddress", 1)]
        public virtual string NodeAddress { get; set; }
    }

    public partial class GetNodeTimezoneLocationFunction : GetNodeTimezoneLocationFunctionBase { }

    [Function("getNodeTimezoneLocation", "string")]
    public class GetNodeTimezoneLocationFunctionBase : FunctionMessage
    {
        [Parameter("address", "_nodeAddress", 1)]
        public virtual string NodeAddress { get; set; }
    }

    public partial class GetNodeWithdrawalAddressFunction : GetNodeWithdrawalAddressFunctionBase { }

    [Function("getNodeWithdrawalAddress", "address")]
    public class GetNodeWithdrawalAddressFunctionBase : FunctionMessage
    {
        [Parameter("address", "_nodeAddress", 1)]
        public virtual string NodeAddress { get; set; }
    }

    public partial class GetRewardNetworkFunction : GetRewardNetworkFunctionBase { }

    [Function("getRewardNetwork", "uint256")]
    public class GetRewardNetworkFunctionBase : FunctionMessage
    {
        [Parameter("address", "_nodeAddress", 1)]
        public virtual string NodeAddress { get; set; }
    }

    public partial class GetSmoothingPoolRegisteredNodeCountFunction : GetSmoothingPoolRegisteredNodeCountFunctionBase { }

    [Function("getSmoothingPoolRegisteredNodeCount", "uint256")]
    public class GetSmoothingPoolRegisteredNodeCountFunctionBase : FunctionMessage
    {
        [Parameter("uint256", "_offset", 1)]
        public virtual BigInteger Offset { get; set; }
        [Parameter("uint256", "_limit", 2)]
        public virtual BigInteger Limit { get; set; }
    }

    public partial class GetSmoothingPoolRegistrationChangedFunction : GetSmoothingPoolRegistrationChangedFunctionBase { }

    [Function("getSmoothingPoolRegistrationChanged", "uint256")]
    public class GetSmoothingPoolRegistrationChangedFunctionBase : FunctionMessage
    {
        [Parameter("address", "_nodeAddress", 1)]
        public virtual string NodeAddress { get; set; }
    }

    public partial class GetSmoothingPoolRegistrationStateFunction : GetSmoothingPoolRegistrationStateFunctionBase { }

    [Function("getSmoothingPoolRegistrationState", "bool")]
    public class GetSmoothingPoolRegistrationStateFunctionBase : FunctionMessage
    {
        [Parameter("address", "_nodeAddress", 1)]
        public virtual string NodeAddress { get; set; }
    }

    public partial class RefundExpressTicketFunction : RefundExpressTicketFunctionBase { }

    [Function("refundExpressTicket")]
    public class RefundExpressTicketFunctionBase : FunctionMessage
    {
        [Parameter("address", "_nodeAddress", 1)]
        public virtual string NodeAddress { get; set; }
    }

    public partial class RegisterNodeFunction : RegisterNodeFunctionBase { }

    [Function("registerNode")]
    public class RegisterNodeFunctionBase : FunctionMessage
    {
        [Parameter("string", "_timezoneLocation", 1)]
        public virtual string TimezoneLocation { get; set; }
    }

    public partial class SetRPLWithdrawalAddressFunction : SetRPLWithdrawalAddressFunctionBase { }

    [Function("setRPLWithdrawalAddress")]
    public class SetRPLWithdrawalAddressFunctionBase : FunctionMessage
    {
        [Parameter("address", "_nodeAddress", 1)]
        public virtual string NodeAddress { get; set; }
        [Parameter("address", "_newRPLWithdrawalAddress", 2)]
        public virtual string NewRPLWithdrawalAddress { get; set; }
        [Parameter("bool", "_confirm", 3)]
        public virtual bool Confirm { get; set; }
    }

    public partial class SetRewardNetworkFunction : SetRewardNetworkFunctionBase { }

    [Function("setRewardNetwork")]
    public class SetRewardNetworkFunctionBase : FunctionMessage
    {
        [Parameter("address", "_nodeAddress", 1)]
        public virtual string NodeAddress { get; set; }
        [Parameter("uint256", "_network", 2)]
        public virtual BigInteger Network { get; set; }
    }

    public partial class SetSmoothingPoolRegistrationStateFunction : SetSmoothingPoolRegistrationStateFunctionBase { }

    [Function("setSmoothingPoolRegistrationState")]
    public class SetSmoothingPoolRegistrationStateFunctionBase : FunctionMessage
    {
        [Parameter("bool", "_state", 1)]
        public virtual bool State { get; set; }
    }

    public partial class SetTimezoneLocationFunction : SetTimezoneLocationFunctionBase { }

    [Function("setTimezoneLocation")]
    public class SetTimezoneLocationFunctionBase : FunctionMessage
    {
        [Parameter("string", "_timezoneLocation", 1)]
        public virtual string TimezoneLocation { get; set; }
    }

    public partial class UnsetRPLWithdrawalAddressFunction : UnsetRPLWithdrawalAddressFunctionBase { }

    [Function("unsetRPLWithdrawalAddress")]
    public class UnsetRPLWithdrawalAddressFunctionBase : FunctionMessage
    {
        [Parameter("address", "_nodeAddress", 1)]
        public virtual string NodeAddress { get; set; }
    }

    public partial class UseExpressTicketFunction : UseExpressTicketFunctionBase { }

    [Function("useExpressTicket")]
    public class UseExpressTicketFunctionBase : FunctionMessage
    {
        [Parameter("address", "_nodeAddress", 1)]
        public virtual string NodeAddress { get; set; }
    }

    public partial class VersionFunction : VersionFunctionBase { }

    [Function("version", "uint8")]
    public class VersionFunctionBase : FunctionMessage
    {

    }

    public partial class NodeRPLWithdrawalAddressSetEventDTO : NodeRPLWithdrawalAddressSetEventDTOBase { }

    [Event("NodeRPLWithdrawalAddressSet")]
    public class NodeRPLWithdrawalAddressSetEventDTOBase : IEventDTO
    {
        [Parameter("address", "node", 1, true )]
        public virtual string Node { get; set; }
        [Parameter("address", "withdrawalAddress", 2, true )]
        public virtual string WithdrawalAddress { get; set; }
        [Parameter("uint256", "time", 3, false )]
        public virtual BigInteger Time { get; set; }
    }

    public partial class NodeRPLWithdrawalAddressUnsetEventDTO : NodeRPLWithdrawalAddressUnsetEventDTOBase { }

    [Event("NodeRPLWithdrawalAddressUnset")]
    public class NodeRPLWithdrawalAddressUnsetEventDTOBase : IEventDTO
    {
        [Parameter("address", "node", 1, true )]
        public virtual string Node { get; set; }
        [Parameter("uint256", "time", 2, false )]
        public virtual BigInteger Time { get; set; }
    }

    public partial class NodeRegisteredEventDTO : NodeRegisteredEventDTOBase { }

    [Event("NodeRegistered")]
    public class NodeRegisteredEventDTOBase : IEventDTO
    {
        [Parameter("address", "node", 1, true )]
        public virtual string Node { get; set; }
        [Parameter("uint256", "time", 2, false )]
        public virtual BigInteger Time { get; set; }
    }

    public partial class NodeRewardNetworkChangedEventDTO : NodeRewardNetworkChangedEventDTOBase { }

    [Event("NodeRewardNetworkChanged")]
    public class NodeRewardNetworkChangedEventDTOBase : IEventDTO
    {
        [Parameter("address", "node", 1, true )]
        public virtual string Node { get; set; }
        [Parameter("uint256", "network", 2, false )]
        public virtual BigInteger Network { get; set; }
    }

    public partial class NodeSmoothingPoolStateChangedEventDTO : NodeSmoothingPoolStateChangedEventDTOBase { }

    [Event("NodeSmoothingPoolStateChanged")]
    public class NodeSmoothingPoolStateChangedEventDTOBase : IEventDTO
    {
        [Parameter("address", "node", 1, true )]
        public virtual string Node { get; set; }
        [Parameter("bool", "state", 2, false )]
        public virtual bool State { get; set; }
    }

    public partial class NodeTimezoneLocationSetEventDTO : NodeTimezoneLocationSetEventDTOBase { }

    [Event("NodeTimezoneLocationSet")]
    public class NodeTimezoneLocationSetEventDTOBase : IEventDTO
    {
        [Parameter("address", "node", 1, true )]
        public virtual string Node { get; set; }
        [Parameter("uint256", "time", 2, false )]
        public virtual BigInteger Time { get; set; }
    }





    public partial class GetAverageNodeFeeOutputDTO : GetAverageNodeFeeOutputDTOBase { }

    [FunctionOutput]
    public class GetAverageNodeFeeOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("uint256", "", 1)]
        public virtual BigInteger ReturnValue1 { get; set; }
    }

    public partial class GetExpressTicketCountOutputDTO : GetExpressTicketCountOutputDTOBase { }

    [FunctionOutput]
    public class GetExpressTicketCountOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("uint256", "", 1)]
        public virtual BigInteger ReturnValue1 { get; set; }
    }

    public partial class GetFeeDistributorInitialisedOutputDTO : GetFeeDistributorInitialisedOutputDTOBase { }

    [FunctionOutput]
    public class GetFeeDistributorInitialisedOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("bool", "", 1)]
        public virtual bool ReturnValue1 { get; set; }
    }

    public partial class GetMegapoolAddressOutputDTO : GetMegapoolAddressOutputDTOBase { }

    [FunctionOutput]
    public class GetMegapoolAddressOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("address", "", 1)]
        public virtual string ReturnValue1 { get; set; }
    }

    public partial class GetNodeAddressesOutputDTO : GetNodeAddressesOutputDTOBase { }

    [FunctionOutput]
    public class GetNodeAddressesOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("address[]", "", 1)]
        public virtual List<string> ReturnValue1 { get; set; }
    }

    public partial class GetNodeAtOutputDTO : GetNodeAtOutputDTOBase { }

    [FunctionOutput]
    public class GetNodeAtOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("address", "", 1)]
        public virtual string ReturnValue1 { get; set; }
    }

    public partial class GetNodeCountOutputDTO : GetNodeCountOutputDTOBase { }

    [FunctionOutput]
    public class GetNodeCountOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("uint256", "", 1)]
        public virtual BigInteger ReturnValue1 { get; set; }
    }

    public partial class GetNodeCountPerTimezoneOutputDTO : GetNodeCountPerTimezoneOutputDTOBase { }

    [FunctionOutput]
    public class GetNodeCountPerTimezoneOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("tuple[]", "", 1)]
        public virtual List<TimezoneCount> ReturnValue1 { get; set; }
    }

    public partial class GetNodeDetailsOutputDTO : GetNodeDetailsOutputDTOBase { }

    [FunctionOutput]
    public class GetNodeDetailsOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("tuple", "nodeDetails", 1)]
        public virtual NodeDetails NodeDetails { get; set; }
    }

    public partial class GetNodeExistsOutputDTO : GetNodeExistsOutputDTOBase { }

    [FunctionOutput]
    public class GetNodeExistsOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("bool", "", 1)]
        public virtual bool ReturnValue1 { get; set; }
    }

    public partial class GetNodePendingRPLWithdrawalAddressOutputDTO : GetNodePendingRPLWithdrawalAddressOutputDTOBase { }

    [FunctionOutput]
    public class GetNodePendingRPLWithdrawalAddressOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("address", "", 1)]
        public virtual string ReturnValue1 { get; set; }
    }

    public partial class GetNodePendingWithdrawalAddressOutputDTO : GetNodePendingWithdrawalAddressOutputDTOBase { }

    [FunctionOutput]
    public class GetNodePendingWithdrawalAddressOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("address", "", 1)]
        public virtual string ReturnValue1 { get; set; }
    }

    public partial class GetNodeRPLWithdrawalAddressOutputDTO : GetNodeRPLWithdrawalAddressOutputDTOBase { }

    [FunctionOutput]
    public class GetNodeRPLWithdrawalAddressOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("address", "", 1)]
        public virtual string ReturnValue1 { get; set; }
    }

    public partial class GetNodeRPLWithdrawalAddressIsSetOutputDTO : GetNodeRPLWithdrawalAddressIsSetOutputDTOBase { }

    [FunctionOutput]
    public class GetNodeRPLWithdrawalAddressIsSetOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("bool", "", 1)]
        public virtual bool ReturnValue1 { get; set; }
    }

    public partial class GetNodeRegistrationTimeOutputDTO : GetNodeRegistrationTimeOutputDTOBase { }

    [FunctionOutput]
    public class GetNodeRegistrationTimeOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("uint256", "", 1)]
        public virtual BigInteger ReturnValue1 { get; set; }
    }

    public partial class GetNodeTimezoneLocationOutputDTO : GetNodeTimezoneLocationOutputDTOBase { }

    [FunctionOutput]
    public class GetNodeTimezoneLocationOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("string", "", 1)]
        public virtual string ReturnValue1 { get; set; }
    }

    public partial class GetNodeWithdrawalAddressOutputDTO : GetNodeWithdrawalAddressOutputDTOBase { }

    [FunctionOutput]
    public class GetNodeWithdrawalAddressOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("address", "", 1)]
        public virtual string ReturnValue1 { get; set; }
    }

    public partial class GetRewardNetworkOutputDTO : GetRewardNetworkOutputDTOBase { }

    [FunctionOutput]
    public class GetRewardNetworkOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("uint256", "", 1)]
        public virtual BigInteger ReturnValue1 { get; set; }
    }

    public partial class GetSmoothingPoolRegisteredNodeCountOutputDTO : GetSmoothingPoolRegisteredNodeCountOutputDTOBase { }

    [FunctionOutput]
    public class GetSmoothingPoolRegisteredNodeCountOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("uint256", "", 1)]
        public virtual BigInteger ReturnValue1 { get; set; }
    }

    public partial class GetSmoothingPoolRegistrationChangedOutputDTO : GetSmoothingPoolRegistrationChangedOutputDTOBase { }

    [FunctionOutput]
    public class GetSmoothingPoolRegistrationChangedOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("uint256", "", 1)]
        public virtual BigInteger ReturnValue1 { get; set; }
    }

    public partial class GetSmoothingPoolRegistrationStateOutputDTO : GetSmoothingPoolRegistrationStateOutputDTOBase { }

    [FunctionOutput]
    public class GetSmoothingPoolRegistrationStateOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("bool", "", 1)]
        public virtual bool ReturnValue1 { get; set; }
    }

















    public partial class VersionOutputDTO : VersionOutputDTOBase { }

    [FunctionOutput]
    public class VersionOutputDTOBase : IFunctionOutputDTO 
    {
        [Parameter("uint8", "", 1)]
        public virtual byte ReturnValue1 { get; set; }
    }
}
